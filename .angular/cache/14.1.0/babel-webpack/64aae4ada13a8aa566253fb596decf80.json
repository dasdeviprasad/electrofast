{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Pipe, EventEmitter, forwardRef, TemplateRef, Component, ViewEncapsulation, ViewChild, Input, Output, ContentChild, NgModule } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { map, filter, debounceTime } from 'rxjs/operators';\nimport * as i2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"searchInput\"];\nconst _c1 = [\"filteredListElement\"];\nconst _c2 = [\"historyListElement\"];\n\nfunction AutocompleteComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function AutocompleteComponent_div_4_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.remove($event));\n    });\n    i0.ɵɵelementStart(1, \"i\", 15);\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AutocompleteComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelement(1, \"div\", 17)(2, \"div\", 18)(3, \"div\", 19)(4, \"div\", 20)(5, \"div\", 21)(6, \"div\", 22)(7, \"div\", 23)(8, \"div\", 24)(9, \"div\", 25)(10, \"div\", 26)(11, \"div\", 27)(12, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AutocompleteComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 30);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.heading);\n  }\n}\n\nfunction AutocompleteComponent_li_10_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c3 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction AutocompleteComponent_li_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵlistener(\"click\", function AutocompleteComponent_li_10_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const item_r13 = i0.ɵɵnextContext().$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.select(item_r13));\n    });\n    i0.ɵɵtemplate(1, AutocompleteComponent_li_10_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 34);\n    i0.ɵɵpipe(2, \"highlight\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext();\n    const idx_r14 = ctx_r21.index;\n    const item_r13 = ctx_r21.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"complete-selected\", idx_r14 === ctx_r15.selectedIdx);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r15.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(7, _c3, i0.ɵɵpipeBind2(2, 4, item_r13, ctx_r15.toHighlight)));\n  }\n}\n\nfunction AutocompleteComponent_li_10_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutocompleteComponent_li_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵlistener(\"click\", function AutocompleteComponent_li_10_div_2_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const item_r13 = i0.ɵɵnextContext().$implicit;\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.select(item_r13));\n    });\n    i0.ɵɵtemplate(1, AutocompleteComponent_li_10_div_2_ng_container_1_Template, 1, 0, \"ng-container\", 34);\n    i0.ɵɵpipe(2, \"highlight\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext();\n    const idx_r14 = ctx_r26.index;\n    const item_r13 = ctx_r26.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"complete-selected\", idx_r14 === ctx_r16.selectedIdx);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r16.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(8, _c3, i0.ɵɵpipeBind3(2, 4, item_r13, ctx_r16.toHighlight, ctx_r16.searchKeyword)));\n  }\n}\n\nfunction AutocompleteComponent_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 31);\n    i0.ɵɵtemplate(1, AutocompleteComponent_li_10_div_1_Template, 3, 9, \"div\", 32);\n    i0.ɵɵtemplate(2, AutocompleteComponent_li_10_div_2_Template, 3, 10, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r13 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.isTypeString(item_r13));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.isTypeString(item_r13));\n  }\n}\n\nfunction AutocompleteComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 30);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function AutocompleteComponent_div_12_Template_div_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.resetHistoryList($event));\n    });\n    i0.ɵɵelementStart(4, \"i\", 35);\n    i0.ɵɵtext(5, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r6.historyHeading);\n  }\n}\n\nfunction AutocompleteComponent_li_15_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutocompleteComponent_li_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r36 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵlistener(\"click\", function AutocompleteComponent_li_15_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r36);\n      const item_r29 = i0.ɵɵnextContext().$implicit;\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.select(item_r29));\n    });\n    i0.ɵɵtemplate(1, AutocompleteComponent_li_15_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 34);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r37 = i0.ɵɵnextContext();\n    const idx_r30 = ctx_r37.index;\n    const item_r29 = ctx_r37.$implicit;\n    const ctx_r31 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"complete-selected\", idx_r30 === ctx_r31.selectedIdx);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r31.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c3, item_r29));\n  }\n}\n\nfunction AutocompleteComponent_li_15_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutocompleteComponent_li_15_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r41 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵlistener(\"click\", function AutocompleteComponent_li_15_div_2_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const item_r29 = i0.ɵɵnextContext().$implicit;\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.select(item_r29));\n    });\n    i0.ɵɵtemplate(1, AutocompleteComponent_li_15_div_2_ng_container_1_Template, 1, 0, \"ng-container\", 34);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r42 = i0.ɵɵnextContext();\n    const idx_r30 = ctx_r42.index;\n    const item_r29 = ctx_r42.$implicit;\n    const ctx_r32 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"complete-selected\", idx_r30 === ctx_r32.selectedIdx);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r32.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c3, item_r29));\n  }\n}\n\nfunction AutocompleteComponent_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 31);\n    i0.ɵɵtemplate(1, AutocompleteComponent_li_15_div_1_Template, 2, 6, \"div\", 32);\n    i0.ɵɵtemplate(2, AutocompleteComponent_li_15_div_2_Template, 2, 6, \"div\", 32);\n    i0.ɵɵelementStart(3, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function AutocompleteComponent_li_15_Template_div_click_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r44);\n      const idx_r30 = restoredCtx.index;\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.removeHistoryItem(idx_r30, $event));\n    });\n    i0.ɵɵelementStart(4, \"i\", 15);\n    i0.ɵɵtext(5, \"close\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const item_r29 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.isTypeString(item_r29));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r8.isTypeString(item_r29));\n  }\n}\n\nfunction AutocompleteComponent_div_16_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutocompleteComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtemplate(1, AutocompleteComponent_div_16_ng_container_1_Template, 1, 0, \"ng-container\", 34);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r9.notFoundTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c3, ctx_r9.notFoundText));\n  }\n}\n\nfunction AutocompleteComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵlistener(\"click\", function AutocompleteComponent_div_17_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r46 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r46.handleOverlay());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c4 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\n\nconst _c5 = function (a0, a1) {\n  return {\n    \"is-hidden\": a0,\n    \"is-visible\": a1\n  };\n};\n\nclass HighlightPipe {\n  transform(text, search, searchKeyword) {\n    let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    pattern = pattern.split(' ').filter(t => {\n      return t.length > 0;\n    }).join('|');\n    const regex = new RegExp(pattern, 'gi');\n\n    if (!search) {\n      return text;\n    }\n\n    if (searchKeyword) {\n      const name = text[searchKeyword].replace(regex, match => `<b>${match}</b>`); // copy original object\n\n      const textCopied = { ...text\n      }; // set bold value into searchKeyword of copied object\n\n      textCopied[searchKeyword] = name;\n      return textCopied;\n    } else {\n      return search ? text.replace(regex, match => `<b>${match}</b>`) : text;\n    }\n  }\n\n}\n\nHighlightPipe.ɵfac = function HighlightPipe_Factory(t) {\n  return new (t || HighlightPipe)();\n};\n\nHighlightPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"highlight\",\n  type: HighlightPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HighlightPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'highlight'\n    }]\n  }], null, null);\n})();\n/**\n * Keyboard events\n */\n\n\nconst isArrowUp = keyCode => keyCode === 38;\n\nconst isArrowDown = keyCode => keyCode === 40;\n\nconst isArrowUpDown = keyCode => isArrowUp(keyCode) || isArrowDown(keyCode);\n\nconst isEnter = keyCode => keyCode === 13;\n\nconst isBackspace = keyCode => keyCode === 8;\n\nconst isDelete = keyCode => keyCode === 46;\n\nconst isESC = keyCode => keyCode === 27;\n\nconst isTab = keyCode => keyCode === 9;\n\nclass AutocompleteComponent {\n  constructor(elementRef, renderer) {\n    this.renderer = renderer;\n    this.query = ''; // search query\n\n    this.filteredList = []; // list of items\n\n    this.historyList = []; // list of history items\n\n    this.isHistoryListVisible = true;\n    this.selectedIdx = -1;\n    this.toHighlight = '';\n    this.notFound = false;\n    this.isFocused = false;\n    this.isOpen = false;\n    this.isScrollToEnd = false;\n    this.overlay = false;\n    this.manualOpen = undefined;\n    this.manualClose = undefined; // @Inputs\n\n    /**\n     * Data of items list.\n     * It can be array of strings or array of objects.\n     */\n\n    this.data = [];\n    this.placeholder = '';\n    this.heading = '';\n    /**\n     * Heading text of history list.\n     * If it is null then history heading is hidden.\n     */\n\n    this.historyHeading = 'Recently selected';\n    this.historyListMaxNumber = 15; // maximum number of items in the history list.\n\n    this.notFoundText = 'Not found'; // set custom text when filter returns empty result\n\n    /**\n     * The minimum number of characters the user must type before a search is performed.\n     */\n\n    this.minQueryLength = 1;\n    /**\n     * Focus first item in the list\n     */\n\n    this.focusFirst = false; // @Output events\n\n    /** Event that is emitted whenever an item from the list is selected. */\n\n    this.selected = new EventEmitter();\n    /** Event that is emitted whenever an input is changed. */\n\n    this.inputChanged = new EventEmitter();\n    /** Event that is emitted whenever an input is focused. */\n\n    this.inputFocused = new EventEmitter();\n    /** Event that is emitted whenever an input is cleared. */\n\n    this.inputCleared = new EventEmitter();\n    /** Event that is emitted when the autocomplete panel is opened. */\n\n    this.opened = new EventEmitter();\n    /** Event that is emitted when the autocomplete panel is closed. */\n\n    this.closed = new EventEmitter();\n    /** Event that is emitted when scrolled to the end of items. */\n\n    this.scrolledToEnd = new EventEmitter();\n    /**\n     * Propagates new value when model changes\n     */\n\n    this.propagateChange = () => {};\n\n    this.onTouched = () => {};\n\n    this.elementRef = elementRef;\n  }\n  /**\n   * Writes a new value from the form model into the view,\n   * Updates model\n   */\n\n\n  writeValue(value = '') {\n    this.query = this.selectedValueRender !== undefined ? this.selectedValueRender(value) : this.defaultWriteValue(value);\n  }\n\n  defaultWriteValue(value) {\n    return value && !this.isTypeString(value) ? value[this.searchKeyword] : value;\n  }\n  /**\n   * Registers a handler that is called when something in the view has changed\n   */\n\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  /**\n   * Registers a handler specifically for when a control receives a touch event\n   */\n\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * Event that is called when the value of an input element is changed\n   */\n\n\n  onChange(event) {\n    this.propagateChange(event.target.value);\n  }\n  /**\n   * Event that is called when the control status changes to or from DISABLED\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    this.initEventStream();\n    this.handleScroll();\n  }\n  /**\n   * Set initial value\n   * @param value\n   */\n\n\n  setInitialValue(value) {\n    if (this.initialValue) {\n      this.select(value);\n    }\n  }\n  /**\n   * Update search results\n   */\n\n\n  ngOnChanges(changes) {\n    this.setInitialValue(this.initialValue);\n\n    if (changes && changes.data && Array.isArray(changes.data.currentValue)) {\n      this.handleItemsChange();\n\n      if (!changes.data.firstChange && this.isFocused) {\n        this.handleOpen();\n      }\n    }\n  }\n  /**\n   * Items change\n   */\n\n\n  handleItemsChange() {\n    this.isScrollToEnd = false;\n\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.filteredList = this.data;\n    this.notFound = !this.filteredList || this.filteredList.length === 0; // Filter list when updating data and panel is open\n\n    if (this.isOpen) {\n      this.filterList();\n    }\n  }\n  /**\n   * Filter data\n   */\n\n\n  filterList() {\n    this.selectedIdx = -1;\n    this.initSearchHistory();\n\n    if (this.query != null && this.data) {\n      this.toHighlight = this.query;\n      this.filteredList = this.customFilter !== undefined ? this.customFilter([...this.data], this.query) : this.defaultFilterFunction(); // If [focusFirst]=\"true\" automatically focus the first match\n\n      if (this.filteredList.length > 0 && this.focusFirst) {\n        this.selectedIdx = 0;\n      }\n    } else {\n      this.notFound = false;\n    }\n  }\n  /**\n   * Default filter function, used unless customFilter is provided\n   */\n\n\n  defaultFilterFunction() {\n    return this.data.filter(item => {\n      if (typeof item === 'string') {\n        // string logic, check equality of strings\n        return item.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n      } else if (typeof item === 'object' && item instanceof Object) {\n        // object logic, check property equality\n        return item[this.searchKeyword] ? item[this.searchKeyword].toLowerCase().indexOf(this.query.toLowerCase()) > -1 : \"\";\n      }\n    });\n  }\n  /**\n   * Check if item is a string in the list.\n   * @param item\n   */\n\n\n  isTypeString(item) {\n    return typeof item === 'string';\n  }\n  /**\n   * Select item in the list.\n   * @param item\n   */\n\n\n  select(item) {\n    this.query = !this.isTypeString(item) ? item[this.searchKeyword] : item;\n    this.isOpen = true;\n    this.overlay = false;\n    this.selected.emit(item);\n    this.propagateChange(item);\n\n    if (this.initialValue) {\n      // check if history already exists in localStorage and then update\n      const history = window.localStorage.getItem(`${this.historyIdentifier}`);\n\n      if (history) {\n        let existingHistory = JSON.parse(localStorage[`${this.historyIdentifier}`]);\n        if (!(existingHistory instanceof Array)) existingHistory = []; // check if selected item exists in existingHistory\n\n        if (!existingHistory.some(existingItem => !this.isTypeString(existingItem) ? existingItem[this.searchKeyword] == item[this.searchKeyword] : existingItem == item)) {\n          existingHistory.unshift(item);\n          localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(existingHistory)); // check if items don't exceed max allowed number\n\n          if (existingHistory.length >= this.historyListMaxNumber) {\n            existingHistory.splice(existingHistory.length - 1, 1);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(existingHistory));\n          }\n        } else {\n          // if selected item exists in existingHistory swap to top in array\n          if (!this.isTypeString(item)) {\n            // object logic\n            const copiedExistingHistory = existingHistory.slice(); // copy original existingHistory array\n\n            const selectedIndex = copiedExistingHistory.map(el => el[this.searchKeyword]).indexOf(item[this.searchKeyword]);\n            copiedExistingHistory.splice(selectedIndex, 1);\n            copiedExistingHistory.splice(0, 0, item);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(copiedExistingHistory));\n          } else {\n            // string logic\n            const copiedExistingHistory = existingHistory.slice(); // copy original existingHistory array\n\n            copiedExistingHistory.splice(copiedExistingHistory.indexOf(item), 1);\n            copiedExistingHistory.splice(0, 0, item);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(copiedExistingHistory));\n          }\n        }\n      } else {\n        this.saveHistory(item);\n      }\n    } else {\n      this.saveHistory(item);\n    }\n\n    this.handleClose();\n  }\n  /**\n   * Document click\n   * @param e event\n   */\n\n\n  handleClick(e) {\n    let clickedComponent = e.target;\n    let inside = false;\n\n    do {\n      if (clickedComponent === this.elementRef.nativeElement) {\n        inside = true;\n\n        if (this.filteredList.length) {\n          this.handleOpen();\n        }\n      }\n\n      clickedComponent = clickedComponent.parentNode;\n    } while (clickedComponent);\n\n    if (!inside) {\n      this.handleClose();\n    }\n  }\n  /**\n   * Handle body overlay\n   */\n\n\n  handleOverlay() {\n    this.overlay = false;\n  }\n  /**\n   * Scroll items\n   */\n\n\n  handleScroll() {\n    this.renderer.listen(this.filteredListElement.nativeElement, 'scroll', () => {\n      this.scrollToEnd();\n    });\n  }\n  /**\n   * Define panel state\n   */\n\n\n  setPanelState(event) {\n    if (event) {\n      event.stopPropagation();\n    } // If controls are untouched\n\n\n    if (typeof this.manualOpen === 'undefined' && typeof this.manualClose === 'undefined') {\n      this.isOpen = false;\n      this.handleOpen();\n    } // If one of the controls is untouched and other is deactivated\n\n\n    if (typeof this.manualOpen === 'undefined' && this.manualClose === false || typeof this.manualClose === 'undefined' && this.manualOpen === false) {\n      this.isOpen = false;\n      this.handleOpen();\n    } // if controls are touched but both are deactivated\n\n\n    if (this.manualOpen === false && this.manualClose === false) {\n      this.isOpen = false;\n      this.handleOpen();\n    } // if open control is touched and activated\n\n\n    if (this.manualOpen) {\n      this.isOpen = false;\n      this.handleOpen();\n      this.manualOpen = false;\n    } // if close control is touched and activated\n\n\n    if (this.manualClose) {\n      this.isOpen = true;\n      this.handleClose();\n      this.manualClose = false;\n    }\n  }\n  /**\n   * Manual controls\n   */\n\n\n  open() {\n    this.manualOpen = true;\n    this.isOpen = false;\n    this.handleOpen();\n  }\n\n  close() {\n    this.manualClose = true;\n    this.isOpen = true;\n    this.handleClose();\n  }\n\n  focus() {\n    this.handleFocus(event);\n  }\n\n  clear() {\n    this.remove(event);\n  }\n  /**\n   * Remove search query\n   */\n\n\n  remove(e) {\n    e.stopPropagation();\n    this.query = '';\n    this.inputCleared.emit();\n    this.propagateChange(this.query);\n    this.setPanelState(e);\n\n    if (this.data && !this.data.length) {\n      this.notFound = false;\n    }\n  }\n  /**\n   * Initialize historyList search\n   */\n\n\n  initSearchHistory() {\n    this.isHistoryListVisible = false;\n\n    if (this.historyIdentifier && !this.query) {\n      const history = window.localStorage.getItem(`${this.historyIdentifier}`);\n\n      if (history) {\n        this.isHistoryListVisible = true;\n        this.filteredList = [];\n        this.historyList = history ? JSON.parse(history) : [];\n      } else {\n        this.isHistoryListVisible = false;\n      }\n    } else {\n      this.isHistoryListVisible = false;\n    }\n  }\n\n  handleOpen() {\n    if (this.isOpen || this.isOpen && !this.isLoading) {\n      return;\n    } // If data exists\n\n\n    if (this.data && this.data.length) {\n      this.isOpen = true;\n      this.overlay = true;\n      this.filterList();\n      this.opened.emit();\n    }\n  }\n\n  handleClose() {\n    if (!this.isOpen) {\n      this.isFocused = false;\n      return;\n    }\n\n    this.isOpen = false;\n    this.overlay = false;\n    this.filteredList = [];\n    this.selectedIdx = -1;\n    this.notFound = false;\n    this.isHistoryListVisible = false;\n    this.isFocused = false;\n    this.closed.emit();\n  }\n\n  handleFocus(e) {\n    this.searchInput.nativeElement.focus();\n\n    if (this.isFocused) {\n      return;\n    }\n\n    this.inputFocused.emit(e); // if data exists then open\n\n    if (this.data && this.data.length) {\n      this.setPanelState(e);\n    }\n\n    this.isFocused = true;\n  }\n\n  scrollToEnd() {\n    if (this.isScrollToEnd) {\n      return;\n    }\n\n    const scrollTop = this.filteredListElement.nativeElement.scrollTop;\n    const scrollHeight = this.filteredListElement.nativeElement.scrollHeight;\n    const elementHeight = this.filteredListElement.nativeElement.clientHeight;\n    const atBottom = elementHeight != 0 && Math.abs(scrollHeight - elementHeight - scrollTop) < 1;\n\n    if (atBottom) {\n      this.scrolledToEnd.emit();\n      this.isScrollToEnd = true;\n    }\n  }\n  /**\n   * Initialize keyboard events\n   */\n\n\n  initEventStream() {\n    this.inputKeyUp$ = fromEvent(this.searchInput.nativeElement, 'keyup').pipe(map(e => e));\n    this.inputKeyDown$ = fromEvent(this.searchInput.nativeElement, 'keydown').pipe(map(e => e));\n    this.listenEventStream();\n  }\n  /**\n   * Listen keyboard events\n   */\n\n\n  listenEventStream() {\n    // key up event\n    this.inputKeyUp$.pipe(filter(e => !isArrowUpDown(e.keyCode) && !isEnter(e.keyCode) && !isESC(e.keyCode) && !isTab(e.keyCode)), debounceTime(this.debounceTime)).subscribe(e => {\n      this.onKeyUp(e);\n    }); // cursor up & down\n\n    this.inputKeyDown$.pipe(filter(e => isArrowUpDown(e.keyCode))).subscribe(e => {\n      e.preventDefault();\n      this.onFocusItem(e);\n    }); // enter keyup\n\n    this.inputKeyUp$.pipe(filter(e => isEnter(e.keyCode))).subscribe(e => {//this.onHandleEnter();\n    }); // enter keydown\n\n    this.inputKeyDown$.pipe(filter(e => isEnter(e.keyCode))).subscribe(e => {\n      this.onHandleEnter();\n    }); // ESC\n\n    this.inputKeyUp$.pipe(filter(e => isESC(e.keyCode), debounceTime(100))).subscribe(e => {\n      this.onEsc();\n    }); // TAB\n\n    this.inputKeyDown$.pipe(filter(e => isTab(e.keyCode))).subscribe(e => {\n      this.onTab();\n    }); // delete\n\n    this.inputKeyDown$.pipe(filter(e => isBackspace(e.keyCode) || isDelete(e.keyCode))).subscribe(e => {\n      this.onDelete();\n    });\n  }\n  /**\n   * on keyup == when input changed\n   * @param e event\n   */\n\n\n  onKeyUp(e) {\n    this.notFound = false; // search results are unknown while typing\n    // if input is empty\n\n    if (!this.query) {\n      this.notFound = false;\n      this.inputChanged.emit(e.target.value);\n      this.inputCleared.emit();\n      this.setPanelState(e);\n    } // note that '' can be a valid query\n\n\n    if (!this.query && this.query !== '') {\n      return;\n    } // if query >= to minQueryLength\n\n\n    if (this.query.length >= this.minQueryLength) {\n      this.inputChanged.emit(e.target.value);\n      this.filterList(); // If no results found\n\n      if (!this.filteredList.length && !this.isLoading) {\n        this.notFoundText ? this.notFound = true : this.notFound = false;\n      }\n\n      if (this.data && !this.data.length) {\n        this.isOpen = true;\n      }\n    }\n  }\n  /**\n   * Keyboard arrow top and arrow bottom\n   * @param e event\n   */\n\n\n  onFocusItem(e) {\n    // move arrow up and down on filteredList or historyList\n    if (!this.historyList.length || !this.isHistoryListVisible) {\n      // filteredList\n      const totalNumItem = this.filteredList.length;\n\n      if (e.key === 'ArrowDown') {\n        let sum = this.selectedIdx;\n        sum = this.selectedIdx === null ? 0 : sum + 1;\n        this.selectedIdx = (totalNumItem + sum) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      } else if (e.key === 'ArrowUp') {\n        if (this.selectedIdx == -1) {\n          this.selectedIdx = 0;\n        }\n\n        this.selectedIdx = (totalNumItem + this.selectedIdx - 1) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      }\n    } else {\n      // historyList\n      const totalNumItem = this.historyList.length;\n\n      if (e.key === 'ArrowDown') {\n        let sum = this.selectedIdx;\n        sum = this.selectedIdx === null ? 0 : sum + 1;\n        this.selectedIdx = (totalNumItem + sum) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      } else if (e.key === 'ArrowUp') {\n        if (this.selectedIdx == -1) {\n          this.selectedIdx = 0;\n        }\n\n        this.selectedIdx = (totalNumItem + this.selectedIdx - 1) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      }\n    }\n  }\n  /**\n   * Scroll to focused item\n   * * @param index\n   */\n\n\n  scrollToFocusedItem(index) {\n    let listElement = null; // Define list element\n\n    if (!this.historyList.length || !this.isHistoryListVisible) {\n      // filteredList element\n      listElement = this.filteredListElement.nativeElement;\n    } else {\n      // historyList element\n      listElement = this.historyListElement.nativeElement;\n    }\n\n    const items = Array.prototype.slice.call(listElement.childNodes).filter(node => {\n      if (node.nodeType === 1) {\n        // if node is element\n        return node.className.includes('item');\n      } else {\n        return false;\n      }\n    });\n\n    if (!items.length) {\n      return;\n    }\n\n    const listHeight = listElement.offsetHeight;\n    const itemHeight = items[index].offsetHeight;\n    const visibleTop = listElement.scrollTop;\n    const visibleBottom = listElement.scrollTop + listHeight - itemHeight;\n    const targetPosition = items[index].offsetTop;\n\n    if (targetPosition < visibleTop) {\n      listElement.scrollTop = targetPosition;\n    }\n\n    if (targetPosition > visibleBottom) {\n      listElement.scrollTop = targetPosition - listHeight + itemHeight;\n    }\n  }\n  /**\n   * Select item on enter click\n   */\n\n\n  onHandleEnter() {\n    // click enter to choose item from filteredList or historyList\n    if (this.selectedIdx > -1) {\n      if (!this.historyList.length || !this.isHistoryListVisible) {\n        // filteredList\n        this.query = !this.isTypeString(this.filteredList[this.selectedIdx]) ? this.filteredList[this.selectedIdx][this.searchKeyword] : this.filteredList[this.selectedIdx];\n        this.saveHistory(this.filteredList[this.selectedIdx]);\n        this.select(this.filteredList[this.selectedIdx]);\n      } else {\n        // historyList\n        this.query = !this.isTypeString(this.historyList[this.selectedIdx]) ? this.historyList[this.selectedIdx][this.searchKeyword] : this.historyList[this.selectedIdx];\n        this.saveHistory(this.historyList[this.selectedIdx]);\n        this.select(this.historyList[this.selectedIdx]);\n      }\n    }\n\n    this.isHistoryListVisible = false;\n    this.handleClose();\n  }\n  /**\n   * Esc click\n   */\n\n\n  onEsc() {\n    this.searchInput.nativeElement.blur();\n    this.handleClose();\n  }\n  /**\n   * Tab click\n   */\n\n\n  onTab() {\n    this.searchInput.nativeElement.blur();\n    this.handleClose();\n  }\n  /**\n   * Delete click\n   */\n\n\n  onDelete() {\n    this.isOpen = true;\n  }\n  /**\n   * Select item to save in localStorage\n   * @param selected\n   */\n\n\n  saveHistory(selected) {\n    if (this.historyIdentifier) {\n      // check if selected item exists in historyList\n      if (!this.historyList.some(item => !this.isTypeString(item) ? item[this.searchKeyword] == selected[this.searchKeyword] : item == selected)) {\n        this.saveHistoryToLocalStorage([selected, ...this.historyList]); // check if items don't exceed max allowed number\n\n        if (this.historyList.length >= this.historyListMaxNumber) {\n          this.historyList.splice(this.historyList.length - 1, 1);\n          this.saveHistoryToLocalStorage([selected, ...this.historyList]);\n        }\n      } else {\n        // if selected item exists in historyList swap to top in array\n        if (!this.isTypeString(selected)) {\n          // object logic\n          const copiedHistoryList = this.historyList.slice(); // copy original historyList array\n\n          const selectedIndex = copiedHistoryList.map(item => item[this.searchKeyword]).indexOf(selected[this.searchKeyword]);\n          copiedHistoryList.splice(selectedIndex, 1);\n          copiedHistoryList.splice(0, 0, selected);\n          this.saveHistoryToLocalStorage([...copiedHistoryList]);\n        } else {\n          // string logic\n          const copiedHistoryList = this.historyList.slice(); // copy original historyList array\n\n          copiedHistoryList.splice(this.historyList.indexOf(selected), 1);\n          copiedHistoryList.splice(0, 0, selected);\n          this.saveHistoryToLocalStorage([...copiedHistoryList]);\n        }\n      }\n    }\n  }\n  /**\n   * Save item in localStorage\n   * @param selected\n   */\n\n\n  saveHistoryToLocalStorage(selected) {\n    window.localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(selected));\n  }\n  /**\n   * Remove item from localStorage\n   * @param index\n   * @param e event\n   */\n\n\n  removeHistoryItem(index, e) {\n    e.stopPropagation();\n    this.historyList = this.historyList.filter((v, i) => i !== index);\n    this.saveHistoryToLocalStorage(this.historyList);\n\n    if (this.historyList.length == 0) {\n      window.localStorage.removeItem(`${this.historyIdentifier}`);\n      this.filterList();\n    }\n  }\n  /**\n   * Reset localStorage\n   * @param e event\n   */\n\n\n  resetHistoryList(e) {\n    e.stopPropagation();\n    this.historyList = [];\n    window.localStorage.removeItem(`${this.historyIdentifier}`);\n    this.filterList();\n  }\n\n}\n\nAutocompleteComponent.ɵfac = function AutocompleteComponent_Factory(t) {\n  return new (t || AutocompleteComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nAutocompleteComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AutocompleteComponent,\n  selectors: [[\"ng-autocomplete\"]],\n  contentQueries: function AutocompleteComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, TemplateRef, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customTemplate = _t.first);\n    }\n  },\n  viewQuery: function AutocompleteComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchInput = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filteredListElement = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.historyListElement = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ng-autocomplete\"],\n  hostBindings: function AutocompleteComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function AutocompleteComponent_click_HostBindingHandler($event) {\n        return ctx.handleClick($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  inputs: {\n    data: \"data\",\n    searchKeyword: \"searchKeyword\",\n    placeholder: \"placeholder\",\n    heading: \"heading\",\n    initialValue: \"initialValue\",\n    historyIdentifier: \"historyIdentifier\",\n    historyHeading: \"historyHeading\",\n    historyListMaxNumber: \"historyListMaxNumber\",\n    notFoundText: \"notFoundText\",\n    isLoading: \"isLoading\",\n    debounceTime: \"debounceTime\",\n    disabled: \"disabled\",\n    minQueryLength: \"minQueryLength\",\n    focusFirst: \"focusFirst\",\n    customFilter: \"customFilter\",\n    selectedValueRender: \"selectedValueRender\",\n    itemTemplate: \"itemTemplate\",\n    notFoundTemplate: \"notFoundTemplate\"\n  },\n  outputs: {\n    selected: \"selected\",\n    inputChanged: \"inputChanged\",\n    inputFocused: \"inputFocused\",\n    inputCleared: \"inputCleared\",\n    opened: \"opened\",\n    closed: \"closed\",\n    scrolledToEnd: \"scrolledToEnd\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AutocompleteComponent),\n    multi: true\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 18,\n  vars: 24,\n  consts: [[\"aria-owns\", \"suggestions suggestions-history\", 1, \"autocomplete-container\", 3, \"ngClass\"], [1, \"input-container\"], [\"type\", \"text\", \"aria-autocomplete\", \"list\", \"role\", \"combobox\", \"autocomplete\", \"off\", 3, \"placeholder\", \"ngModel\", \"disabled\", \"ngModelChange\", \"input\", \"focus\", \"blur\"], [\"searchInput\", \"\"], [\"class\", \"x\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"sk-fading-circle\", 4, \"ngIf\"], [\"id\", \"suggestions\", \"role\", \"listbox\", 1, \"suggestions-container\", 3, \"ngClass\"], [\"class\", \"heading\", 4, \"ngIf\"], [\"filteredListElement\", \"\"], [\"class\", \"item\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"suggestions-history\", \"role\", \"listbox\", 1, \"suggestions-container\", 3, \"ngClass\"], [\"historyListElement\", \"\"], [\"class\", \"not-found\", 4, \"ngIf\"], [\"class\", \"autocomplete-overlay\", 3, \"click\", 4, \"ngIf\"], [1, \"x\", 3, \"click\"], [\"aria-label\", \"Close\", 1, \"material-icons\"], [1, \"sk-fading-circle\"], [1, \"sk-circle1\", \"sk-circle\"], [1, \"sk-circle2\", \"sk-circle\"], [1, \"sk-circle3\", \"sk-circle\"], [1, \"sk-circle4\", \"sk-circle\"], [1, \"sk-circle5\", \"sk-circle\"], [1, \"sk-circle6\", \"sk-circle\"], [1, \"sk-circle7\", \"sk-circle\"], [1, \"sk-circle8\", \"sk-circle\"], [1, \"sk-circle9\", \"sk-circle\"], [1, \"sk-circle10\", \"sk-circle\"], [1, \"sk-circle11\", \"sk-circle\"], [1, \"sk-circle12\", \"sk-circle\"], [1, \"heading\"], [1, \"text\"], [1, \"item\"], [3, \"complete-selected\", \"click\", 4, \"ngIf\"], [3, \"click\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"aria-label\", \"Delete\", 1, \"material-icons\"], [1, \"not-found\"], [1, \"autocomplete-overlay\", 3, \"click\"]],\n  template: function AutocompleteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"input\", 2, 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AutocompleteComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.query = $event;\n      })(\"input\", function AutocompleteComponent_Template_input_input_2_listener($event) {\n        return ctx.onChange($event);\n      })(\"focus\", function AutocompleteComponent_Template_input_focus_2_listener($event) {\n        return ctx.handleFocus($event);\n      })(\"blur\", function AutocompleteComponent_Template_input_blur_2_listener($event) {\n        return ctx.onTouched($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, AutocompleteComponent_div_4_Template, 3, 0, \"div\", 4);\n      i0.ɵɵtemplate(5, AutocompleteComponent_div_5_Template, 13, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 6);\n      i0.ɵɵtemplate(7, AutocompleteComponent_div_7_Template, 3, 1, \"div\", 7);\n      i0.ɵɵelementStart(8, \"ul\", null, 8);\n      i0.ɵɵtemplate(10, AutocompleteComponent_li_10_Template, 3, 2, \"li\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 10);\n      i0.ɵɵtemplate(12, AutocompleteComponent_div_12_Template, 6, 1, \"div\", 7);\n      i0.ɵɵelementStart(13, \"ul\", null, 11);\n      i0.ɵɵtemplate(15, AutocompleteComponent_li_15_Template, 6, 2, \"li\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(16, AutocompleteComponent_div_16_Template, 2, 4, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, AutocompleteComponent_div_17_Template, 1, 0, \"div\", 13);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c4, ctx.isOpen));\n      i0.ɵɵattribute(\"aria-expanded\", ctx.isOpen);\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.placeholder);\n      i0.ɵɵproperty(\"ngModel\", ctx.query)(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"aria-label\", ctx.placeholder);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.query && !ctx.isLoading && !ctx.disabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(18, _c5, ctx.isHistoryListVisible, !ctx.isHistoryListVisible));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.filteredList.length > 0 && ctx.heading);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filteredList);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(21, _c5, !ctx.isHistoryListVisible, ctx.isHistoryListVisible));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.historyList.length > 0 && ctx.historyHeading);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.historyList);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading ? !ctx.isLoading && ctx.notFound : ctx.notFound);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.overlay);\n    }\n  },\n  dependencies: [i1.NgClass, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i1.NgIf, i1.NgForOf, i1.NgTemplateOutlet, HighlightPipe],\n  styles: [\"@import\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\";.ng-autocomplete{width:600px}.autocomplete-container{box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;position:relative;overflow:visible;height:40px}.autocomplete-container .input-container input{font-size:14px;box-sizing:border-box;border:none;box-shadow:none;outline:none;background-color:#fff;color:#000000de;width:100%;padding:0 15px;line-height:40px;height:40px}.autocomplete-container .input-container input:disabled{background-color:#eee;color:#666}.autocomplete-container .input-container .x{position:absolute;right:10px;margin:auto;cursor:pointer;top:50%;transform:translateY(-50%)}.autocomplete-container .input-container .x i{color:#0000008a;font-size:22px;vertical-align:middle}.autocomplete-container .suggestions-container{position:absolute;width:100%;background:white;height:auto;box-shadow:0 2px 5px #00000040;box-sizing:border-box}.autocomplete-container .suggestions-container ul{padding:0;margin:0;max-height:240px;overflow-y:auto}.autocomplete-container .suggestions-container ul li{position:relative;list-style:none;padding:0;margin:0;cursor:pointer}.autocomplete-container .suggestions-container ul li a{padding:14px 15px;display:block;text-decoration:none;color:#333;cursor:pointer;color:#000000de;font-size:15px}.autocomplete-container .suggestions-container ul li:hover,.autocomplete-container .suggestions-container .complete-selected{background-color:#9e9e9e2e}.autocomplete-container .suggestions-container .heading{position:relative;padding:10px 15px;border:solid 1px #f1f1f1}.autocomplete-container .suggestions-container .heading .text{font-size:.85em}.autocomplete-container .suggestions-container .x{position:absolute;right:10px;margin:auto;cursor:pointer;top:50%;transform:translateY(-50%)}.autocomplete-container .suggestions-container .x i{color:#0000008a;font-size:18px;vertical-align:middle}.autocomplete-container .suggestions-container.is-hidden{visibility:hidden}.autocomplete-container .suggestions-container.is-visible{visibility:visible}.autocomplete-container .not-found{padding:0 .75em;border:solid 1px #f1f1f1;background:white}.autocomplete-container .not-found div{padding:.4em 0;font-size:.95em;line-height:1.4;border-bottom:1px solid rgba(230,230,230,.7)}.autocomplete-container.active{z-index:999}.highlight{font-weight:700}.autocomplete-overlay{position:fixed;background-color:transparent;width:100%;height:100%;top:0;right:0;bottom:0;left:0;z-index:50}input[type=text]::-ms-clear{display:none}.sk-fading-circle{width:20px;height:20px;position:absolute;right:10px;top:0;bottom:0;margin:auto}.sk-fading-circle .sk-circle{width:100%;height:100%;position:absolute;left:0;top:0}.sk-fading-circle .sk-circle:before{content:\\\"\\\";display:block;margin:0 auto;width:15%;height:15%;background-color:#333;border-radius:100%;animation:sk-circleFadeDelay 1.2s infinite ease-in-out both}.sk-fading-circle .sk-circle2{transform:rotate(30deg)}.sk-fading-circle .sk-circle3{transform:rotate(60deg)}.sk-fading-circle .sk-circle4{transform:rotate(90deg)}.sk-fading-circle .sk-circle5{transform:rotate(120deg)}.sk-fading-circle .sk-circle6{transform:rotate(150deg)}.sk-fading-circle .sk-circle7{transform:rotate(180deg)}.sk-fading-circle .sk-circle8{transform:rotate(210deg)}.sk-fading-circle .sk-circle9{transform:rotate(240deg)}.sk-fading-circle .sk-circle10{transform:rotate(270deg)}.sk-fading-circle .sk-circle11{transform:rotate(300deg)}.sk-fading-circle .sk-circle12{transform:rotate(330deg)}.sk-fading-circle .sk-circle2:before{animation-delay:-1.1s}.sk-fading-circle .sk-circle3:before{animation-delay:-1s}.sk-fading-circle .sk-circle4:before{animation-delay:-.9s}.sk-fading-circle .sk-circle5:before{animation-delay:-.8s}.sk-fading-circle .sk-circle6:before{animation-delay:-.7s}.sk-fading-circle .sk-circle7:before{animation-delay:-.6s}.sk-fading-circle .sk-circle8:before{animation-delay:-.5s}.sk-fading-circle .sk-circle9:before{animation-delay:-.4s}.sk-fading-circle .sk-circle10:before{animation-delay:-.3s}.sk-fading-circle .sk-circle11:before{animation-delay:-.2s}.sk-fading-circle .sk-circle12:before{animation-delay:-.1s}@keyframes sk-circleFadeDelay{0%,39%,to{opacity:0}40%{opacity:1}}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutocompleteComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-autocomplete',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => AutocompleteComponent),\n        multi: true\n      }],\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '(document:click)': 'handleClick($event)',\n        'class': 'ng-autocomplete'\n      },\n      template: \"<div class=\\\"autocomplete-container\\\" aria-owns=\\\"suggestions suggestions-history\\\" [attr.aria-expanded]=\\\"isOpen\\\"\\n     [ngClass]=\\\"{ 'active': isOpen}\\\">\\n  <div class=\\\"input-container\\\">\\n    <input #searchInput\\n           type=\\\"text\\\"\\n           attr.aria-label=\\\"{{placeholder}}\\\"\\n           aria-autocomplete=\\\"list\\\"\\n           role=\\\"combobox\\\"\\n           placeholder={{placeholder}}\\n           [(ngModel)]=query\\n           (input)=\\\"onChange($event)\\\"\\n           (focus)=handleFocus($event)\\n           (blur)=onTouched($event)\\n           [disabled]=\\\"disabled\\\"\\n           autocomplete=\\\"off\\\">\\n    <div class=\\\"x\\\" *ngIf=\\\"query && !isLoading && !disabled\\\" (click)=\\\"remove($event)\\\">\\n      <i class=\\\"material-icons\\\" aria-label=\\\"Close\\\">close</i>\\n    </div>\\n    <!--Loading mask-->\\n    <div class=\\\"sk-fading-circle\\\" *ngIf=\\\"isLoading\\\">\\n      <div class=\\\"sk-circle1 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle2 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle3 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle4 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle5 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle6 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle7 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle8 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle9 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle10 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle11 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle12 sk-circle\\\"></div>\\n    </div>\\n  </div>\\n\\n  <!--FilteredList items-->\\n  <div class=\\\"suggestions-container\\\" id=\\\"suggestions\\\" role=\\\"listbox\\\"\\n       [ngClass]=\\\"{ 'is-hidden': isHistoryListVisible, 'is-visible': !isHistoryListVisible}\\\">\\n    <!--FilteredList heading-->\\n    <div class=\\\"heading\\\" *ngIf=\\\"filteredList.length > 0 && heading\\\">\\n      <div class=\\\"text\\\">{{heading}}</div>\\n    </div>\\n\\n    <ul #filteredListElement>\\n      <li *ngFor=\\\"let item of filteredList; let idx = index\\\" class=\\\"item\\\">\\n        <!--string logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='isTypeString(item)'\\n             (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate;  context: { $implicit: item | highlight: toHighlight }\\\">\\n          </ng-container>\\n        </div>\\n        <!--object logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='!isTypeString(item)'\\n             (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate; context: { $implicit: item | highlight: toHighlight : searchKeyword }\\\">\\n          </ng-container>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <!--HistoryList items-->\\n  <div class=\\\"suggestions-container\\\" id=\\\"suggestions-history\\\" role=\\\"listbox\\\"\\n       [ngClass]=\\\"{ 'is-hidden': !isHistoryListVisible, 'is-visible': isHistoryListVisible}\\\">\\n    <!--HistoryList heading-->\\n    <div class=\\\"heading\\\" *ngIf=\\\"historyList.length > 0 && historyHeading\\\">\\n      <div class=\\\"text\\\">{{historyHeading}}</div>\\n      <div class=\\\"x\\\" (click)=\\\"resetHistoryList($event)\\\">\\n        <i class=\\\"material-icons\\\" aria-label=\\\"Delete\\\">delete</i>\\n      </div>\\n    </div>\\n\\n    <ul #historyListElement>\\n      <li *ngFor=\\\"let item of historyList; let idx = index\\\" class=\\\"item\\\">\\n        <!--string logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='isTypeString(item)' (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate;  context: { $implicit: item }\\\">\\n          </ng-container>\\n        </div>\\n        <!--object logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='!isTypeString(item)' (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate; context: { $implicit: item }\\\">\\n          </ng-container>\\n        </div>\\n        <div class=\\\"x\\\" (click)=\\\"removeHistoryItem(idx, $event)\\\">\\n          <i class=\\\"material-icons\\\" aria-label=\\\"Close\\\">close</i>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <!--Not found-->\\n  <div class=\\\"not-found\\\" *ngIf=\\\"isLoading ? !isLoading && notFound : notFound\\\">\\n    <ng-container\\n      *ngTemplateOutlet=\\\"notFoundTemplate;  context: { $implicit: notFoundText  }\\\">\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"autocomplete-overlay\\\" *ngIf=\\\"overlay\\\" (click)=\\\"handleOverlay()\\\"></div>\\n\",\n      styles: [\"@import\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\";.ng-autocomplete{width:600px}.autocomplete-container{box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;position:relative;overflow:visible;height:40px}.autocomplete-container .input-container input{font-size:14px;box-sizing:border-box;border:none;box-shadow:none;outline:none;background-color:#fff;color:#000000de;width:100%;padding:0 15px;line-height:40px;height:40px}.autocomplete-container .input-container input:disabled{background-color:#eee;color:#666}.autocomplete-container .input-container .x{position:absolute;right:10px;margin:auto;cursor:pointer;top:50%;transform:translateY(-50%)}.autocomplete-container .input-container .x i{color:#0000008a;font-size:22px;vertical-align:middle}.autocomplete-container .suggestions-container{position:absolute;width:100%;background:white;height:auto;box-shadow:0 2px 5px #00000040;box-sizing:border-box}.autocomplete-container .suggestions-container ul{padding:0;margin:0;max-height:240px;overflow-y:auto}.autocomplete-container .suggestions-container ul li{position:relative;list-style:none;padding:0;margin:0;cursor:pointer}.autocomplete-container .suggestions-container ul li a{padding:14px 15px;display:block;text-decoration:none;color:#333;cursor:pointer;color:#000000de;font-size:15px}.autocomplete-container .suggestions-container ul li:hover,.autocomplete-container .suggestions-container .complete-selected{background-color:#9e9e9e2e}.autocomplete-container .suggestions-container .heading{position:relative;padding:10px 15px;border:solid 1px #f1f1f1}.autocomplete-container .suggestions-container .heading .text{font-size:.85em}.autocomplete-container .suggestions-container .x{position:absolute;right:10px;margin:auto;cursor:pointer;top:50%;transform:translateY(-50%)}.autocomplete-container .suggestions-container .x i{color:#0000008a;font-size:18px;vertical-align:middle}.autocomplete-container .suggestions-container.is-hidden{visibility:hidden}.autocomplete-container .suggestions-container.is-visible{visibility:visible}.autocomplete-container .not-found{padding:0 .75em;border:solid 1px #f1f1f1;background:white}.autocomplete-container .not-found div{padding:.4em 0;font-size:.95em;line-height:1.4;border-bottom:1px solid rgba(230,230,230,.7)}.autocomplete-container.active{z-index:999}.highlight{font-weight:700}.autocomplete-overlay{position:fixed;background-color:transparent;width:100%;height:100%;top:0;right:0;bottom:0;left:0;z-index:50}input[type=text]::-ms-clear{display:none}.sk-fading-circle{width:20px;height:20px;position:absolute;right:10px;top:0;bottom:0;margin:auto}.sk-fading-circle .sk-circle{width:100%;height:100%;position:absolute;left:0;top:0}.sk-fading-circle .sk-circle:before{content:\\\"\\\";display:block;margin:0 auto;width:15%;height:15%;background-color:#333;border-radius:100%;animation:sk-circleFadeDelay 1.2s infinite ease-in-out both}.sk-fading-circle .sk-circle2{transform:rotate(30deg)}.sk-fading-circle .sk-circle3{transform:rotate(60deg)}.sk-fading-circle .sk-circle4{transform:rotate(90deg)}.sk-fading-circle .sk-circle5{transform:rotate(120deg)}.sk-fading-circle .sk-circle6{transform:rotate(150deg)}.sk-fading-circle .sk-circle7{transform:rotate(180deg)}.sk-fading-circle .sk-circle8{transform:rotate(210deg)}.sk-fading-circle .sk-circle9{transform:rotate(240deg)}.sk-fading-circle .sk-circle10{transform:rotate(270deg)}.sk-fading-circle .sk-circle11{transform:rotate(300deg)}.sk-fading-circle .sk-circle12{transform:rotate(330deg)}.sk-fading-circle .sk-circle2:before{animation-delay:-1.1s}.sk-fading-circle .sk-circle3:before{animation-delay:-1s}.sk-fading-circle .sk-circle4:before{animation-delay:-.9s}.sk-fading-circle .sk-circle5:before{animation-delay:-.8s}.sk-fading-circle .sk-circle6:before{animation-delay:-.7s}.sk-fading-circle .sk-circle7:before{animation-delay:-.6s}.sk-fading-circle .sk-circle8:before{animation-delay:-.5s}.sk-fading-circle .sk-circle9:before{animation-delay:-.4s}.sk-fading-circle .sk-circle10:before{animation-delay:-.3s}.sk-fading-circle .sk-circle11:before{animation-delay:-.2s}.sk-fading-circle .sk-circle12:before{animation-delay:-.1s}@keyframes sk-circleFadeDelay{0%,39%,to{opacity:0}40%{opacity:1}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    searchInput: [{\n      type: ViewChild,\n      args: ['searchInput']\n    }],\n    filteredListElement: [{\n      type: ViewChild,\n      args: ['filteredListElement']\n    }],\n    historyListElement: [{\n      type: ViewChild,\n      args: ['historyListElement']\n    }],\n    data: [{\n      type: Input\n    }],\n    searchKeyword: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    heading: [{\n      type: Input\n    }],\n    initialValue: [{\n      type: Input\n    }],\n    historyIdentifier: [{\n      type: Input\n    }],\n    historyHeading: [{\n      type: Input\n    }],\n    historyListMaxNumber: [{\n      type: Input\n    }],\n    notFoundText: [{\n      type: Input\n    }],\n    isLoading: [{\n      type: Input\n    }],\n    debounceTime: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    minQueryLength: [{\n      type: Input\n    }],\n    focusFirst: [{\n      type: Input\n    }],\n    customFilter: [{\n      type: Input\n    }],\n    selectedValueRender: [{\n      type: Input\n    }],\n    selected: [{\n      type: Output\n    }],\n    inputChanged: [{\n      type: Output\n    }],\n    inputFocused: [{\n      type: Output\n    }],\n    inputCleared: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n    scrolledToEnd: [{\n      type: Output\n    }],\n    itemTemplate: [{\n      type: Input\n    }],\n    notFoundTemplate: [{\n      type: Input\n    }],\n    customTemplate: [{\n      type: ContentChild,\n      args: [TemplateRef]\n    }]\n  });\n})();\n\nclass AutocompleteLibModule {}\n\nAutocompleteLibModule.ɵfac = function AutocompleteLibModule_Factory(t) {\n  return new (t || AutocompleteLibModule)();\n};\n\nAutocompleteLibModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AutocompleteLibModule\n});\nAutocompleteLibModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutocompleteLibModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule],\n      declarations: [AutocompleteComponent, HighlightPipe],\n      exports: [AutocompleteComponent, HighlightPipe]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of autocomplete-lib\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AutocompleteComponent, AutocompleteLibModule, HighlightPipe };","map":{"version":3,"names":["i0","Pipe","EventEmitter","forwardRef","TemplateRef","Component","ViewEncapsulation","ViewChild","Input","Output","ContentChild","NgModule","fromEvent","map","filter","debounceTime","i2","NG_VALUE_ACCESSOR","FormsModule","i1","CommonModule","HighlightPipe","transform","text","search","searchKeyword","pattern","replace","split","t","length","join","regex","RegExp","name","match","textCopied","ɵfac","ɵpipe","type","args","isArrowUp","keyCode","isArrowDown","isArrowUpDown","isEnter","isBackspace","isDelete","isESC","isTab","AutocompleteComponent","constructor","elementRef","renderer","query","filteredList","historyList","isHistoryListVisible","selectedIdx","toHighlight","notFound","isFocused","isOpen","isScrollToEnd","overlay","manualOpen","undefined","manualClose","data","placeholder","heading","historyHeading","historyListMaxNumber","notFoundText","minQueryLength","focusFirst","selected","inputChanged","inputFocused","inputCleared","opened","closed","scrolledToEnd","propagateChange","onTouched","writeValue","value","selectedValueRender","defaultWriteValue","isTypeString","registerOnChange","fn","registerOnTouched","onChange","event","target","setDisabledState","isDisabled","disabled","ngOnInit","ngAfterViewInit","initEventStream","handleScroll","setInitialValue","initialValue","select","ngOnChanges","changes","Array","isArray","currentValue","handleItemsChange","firstChange","handleOpen","filterList","initSearchHistory","customFilter","defaultFilterFunction","item","toLowerCase","indexOf","Object","emit","history","window","localStorage","getItem","historyIdentifier","existingHistory","JSON","parse","some","existingItem","unshift","setItem","stringify","splice","copiedExistingHistory","slice","selectedIndex","el","saveHistory","handleClose","handleClick","e","clickedComponent","inside","nativeElement","parentNode","handleOverlay","listen","filteredListElement","scrollToEnd","setPanelState","stopPropagation","open","close","focus","handleFocus","clear","remove","isLoading","searchInput","scrollTop","scrollHeight","elementHeight","clientHeight","atBottom","Math","abs","inputKeyUp$","pipe","inputKeyDown$","listenEventStream","subscribe","onKeyUp","preventDefault","onFocusItem","onHandleEnter","onEsc","onTab","onDelete","totalNumItem","key","sum","scrollToFocusedItem","index","listElement","historyListElement","items","prototype","call","childNodes","node","nodeType","className","includes","listHeight","offsetHeight","itemHeight","visibleTop","visibleBottom","targetPosition","offsetTop","blur","saveHistoryToLocalStorage","copiedHistoryList","removeHistoryItem","v","i","removeItem","resetHistoryList","ElementRef","Renderer2","ɵcmp","provide","useExisting","multi","NgClass","DefaultValueAccessor","NgControlStatus","NgModel","NgIf","NgForOf","NgTemplateOutlet","selector","providers","encapsulation","None","host","template","styles","itemTemplate","notFoundTemplate","customTemplate","AutocompleteLibModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["/Users/apple/Documents/Personal/buzby/electrofast/node_modules/angular-ng-autocomplete/fesm2020/angular-ng-autocomplete.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Pipe, EventEmitter, forwardRef, TemplateRef, Component, ViewEncapsulation, ViewChild, Input, Output, ContentChild, NgModule } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { map, filter, debounceTime } from 'rxjs/operators';\nimport * as i2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass HighlightPipe {\n    transform(text, search, searchKeyword) {\n        let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n        pattern = pattern.split(' ').filter((t) => {\n            return t.length > 0;\n        }).join('|');\n        const regex = new RegExp(pattern, 'gi');\n        if (!search) {\n            return text;\n        }\n        if (searchKeyword) {\n            const name = text[searchKeyword].replace(regex, (match) => `<b>${match}</b>`);\n            // copy original object\n            const textCopied = { ...text };\n            // set bold value into searchKeyword of copied object\n            textCopied[searchKeyword] = name;\n            return textCopied;\n        }\n        else {\n            return search ? text.replace(regex, (match) => `<b>${match}</b>`) : text;\n        }\n    }\n}\nHighlightPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: HighlightPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nHighlightPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: HighlightPipe, name: \"highlight\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: HighlightPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'highlight'\n                }]\n        }] });\n\n/**\n * Keyboard events\n */\nconst isArrowUp = keyCode => keyCode === 38;\nconst isArrowDown = keyCode => keyCode === 40;\nconst isArrowUpDown = keyCode => isArrowUp(keyCode) || isArrowDown(keyCode);\nconst isEnter = keyCode => keyCode === 13;\nconst isBackspace = keyCode => keyCode === 8;\nconst isDelete = keyCode => keyCode === 46;\nconst isESC = keyCode => keyCode === 27;\nconst isTab = keyCode => keyCode === 9;\nclass AutocompleteComponent {\n    constructor(elementRef, renderer) {\n        this.renderer = renderer;\n        this.query = ''; // search query\n        this.filteredList = []; // list of items\n        this.historyList = []; // list of history items\n        this.isHistoryListVisible = true;\n        this.selectedIdx = -1;\n        this.toHighlight = '';\n        this.notFound = false;\n        this.isFocused = false;\n        this.isOpen = false;\n        this.isScrollToEnd = false;\n        this.overlay = false;\n        this.manualOpen = undefined;\n        this.manualClose = undefined;\n        // @Inputs\n        /**\n         * Data of items list.\n         * It can be array of strings or array of objects.\n         */\n        this.data = [];\n        this.placeholder = '';\n        this.heading = '';\n        /**\n         * Heading text of history list.\n         * If it is null then history heading is hidden.\n         */\n        this.historyHeading = 'Recently selected';\n        this.historyListMaxNumber = 15; // maximum number of items in the history list.\n        this.notFoundText = 'Not found'; // set custom text when filter returns empty result\n        /**\n         * The minimum number of characters the user must type before a search is performed.\n         */\n        this.minQueryLength = 1;\n        /**\n         * Focus first item in the list\n         */\n        this.focusFirst = false;\n        // @Output events\n        /** Event that is emitted whenever an item from the list is selected. */\n        this.selected = new EventEmitter();\n        /** Event that is emitted whenever an input is changed. */\n        this.inputChanged = new EventEmitter();\n        /** Event that is emitted whenever an input is focused. */\n        this.inputFocused = new EventEmitter();\n        /** Event that is emitted whenever an input is cleared. */\n        this.inputCleared = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is opened. */\n        this.opened = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is closed. */\n        this.closed = new EventEmitter();\n        /** Event that is emitted when scrolled to the end of items. */\n        this.scrolledToEnd = new EventEmitter();\n        /**\n         * Propagates new value when model changes\n         */\n        this.propagateChange = () => {\n        };\n        this.onTouched = () => {\n        };\n        this.elementRef = elementRef;\n    }\n    /**\n     * Writes a new value from the form model into the view,\n     * Updates model\n     */\n    writeValue(value = '') {\n        this.query = this.selectedValueRender !== undefined ? this.selectedValueRender(value) : this.defaultWriteValue(value);\n    }\n    defaultWriteValue(value) {\n        return value && !this.isTypeString(value) ? value[this.searchKeyword] : value;\n    }\n    /**\n     * Registers a handler that is called when something in the view has changed\n     */\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n    /**\n     * Registers a handler specifically for when a control receives a touch event\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Event that is called when the value of an input element is changed\n     */\n    onChange(event) {\n        this.propagateChange(event.target.value);\n    }\n    /**\n     * Event that is called when the control status changes to or from DISABLED\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    ngOnInit() {\n    }\n    ngAfterViewInit() {\n        this.initEventStream();\n        this.handleScroll();\n    }\n    /**\n     * Set initial value\n     * @param value\n     */\n    setInitialValue(value) {\n        if (this.initialValue) {\n            this.select(value);\n        }\n    }\n    /**\n     * Update search results\n     */\n    ngOnChanges(changes) {\n        this.setInitialValue(this.initialValue);\n        if (changes &&\n            changes.data &&\n            Array.isArray(changes.data.currentValue)) {\n            this.handleItemsChange();\n            if (!changes.data.firstChange && this.isFocused) {\n                this.handleOpen();\n            }\n        }\n    }\n    /**\n     * Items change\n     */\n    handleItemsChange() {\n        this.isScrollToEnd = false;\n        if (!this.isOpen) {\n            return;\n        }\n        this.filteredList = this.data;\n        this.notFound = !this.filteredList || this.filteredList.length === 0;\n        // Filter list when updating data and panel is open\n        if (this.isOpen) {\n            this.filterList();\n        }\n    }\n    /**\n     * Filter data\n     */\n    filterList() {\n        this.selectedIdx = -1;\n        this.initSearchHistory();\n        if (this.query != null && this.data) {\n            this.toHighlight = this.query;\n            this.filteredList = this.customFilter !== undefined ? this.customFilter([...this.data], this.query) : this.defaultFilterFunction();\n            // If [focusFirst]=\"true\" automatically focus the first match\n            if (this.filteredList.length > 0 && this.focusFirst) {\n                this.selectedIdx = 0;\n            }\n        }\n        else {\n            this.notFound = false;\n        }\n    }\n    /**\n     * Default filter function, used unless customFilter is provided\n     */\n    defaultFilterFunction() {\n        return this.data.filter((item) => {\n            if (typeof item === 'string') {\n                // string logic, check equality of strings\n                return item.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n            }\n            else if (typeof item === 'object' && item instanceof Object) {\n                // object logic, check property equality\n                return item[this.searchKeyword] ? item[this.searchKeyword].toLowerCase().indexOf(this.query.toLowerCase()) > -1 : \"\";\n            }\n        });\n    }\n    /**\n     * Check if item is a string in the list.\n     * @param item\n     */\n    isTypeString(item) {\n        return typeof item === 'string';\n    }\n    /**\n     * Select item in the list.\n     * @param item\n     */\n    select(item) {\n        this.query = !this.isTypeString(item) ? item[this.searchKeyword] : item;\n        this.isOpen = true;\n        this.overlay = false;\n        this.selected.emit(item);\n        this.propagateChange(item);\n        if (this.initialValue) {\n            // check if history already exists in localStorage and then update\n            const history = window.localStorage.getItem(`${this.historyIdentifier}`);\n            if (history) {\n                let existingHistory = JSON.parse(localStorage[`${this.historyIdentifier}`]);\n                if (!(existingHistory instanceof Array))\n                    existingHistory = [];\n                // check if selected item exists in existingHistory\n                if (!existingHistory.some((existingItem) => !this.isTypeString(existingItem)\n                    ? existingItem[this.searchKeyword] == item[this.searchKeyword] : existingItem == item)) {\n                    existingHistory.unshift(item);\n                    localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(existingHistory));\n                    // check if items don't exceed max allowed number\n                    if (existingHistory.length >= this.historyListMaxNumber) {\n                        existingHistory.splice(existingHistory.length - 1, 1);\n                        localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(existingHistory));\n                    }\n                }\n                else {\n                    // if selected item exists in existingHistory swap to top in array\n                    if (!this.isTypeString(item)) {\n                        // object logic\n                        const copiedExistingHistory = existingHistory.slice(); // copy original existingHistory array\n                        const selectedIndex = copiedExistingHistory.map((el) => el[this.searchKeyword]).indexOf(item[this.searchKeyword]);\n                        copiedExistingHistory.splice(selectedIndex, 1);\n                        copiedExistingHistory.splice(0, 0, item);\n                        localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(copiedExistingHistory));\n                    }\n                    else {\n                        // string logic\n                        const copiedExistingHistory = existingHistory.slice(); // copy original existingHistory array\n                        copiedExistingHistory.splice(copiedExistingHistory.indexOf(item), 1);\n                        copiedExistingHistory.splice(0, 0, item);\n                        localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(copiedExistingHistory));\n                    }\n                }\n            }\n            else {\n                this.saveHistory(item);\n            }\n        }\n        else {\n            this.saveHistory(item);\n        }\n        this.handleClose();\n    }\n    /**\n     * Document click\n     * @param e event\n     */\n    handleClick(e) {\n        let clickedComponent = e.target;\n        let inside = false;\n        do {\n            if (clickedComponent === this.elementRef.nativeElement) {\n                inside = true;\n                if (this.filteredList.length) {\n                    this.handleOpen();\n                }\n            }\n            clickedComponent = clickedComponent.parentNode;\n        } while (clickedComponent);\n        if (!inside) {\n            this.handleClose();\n        }\n    }\n    /**\n     * Handle body overlay\n     */\n    handleOverlay() {\n        this.overlay = false;\n    }\n    /**\n     * Scroll items\n     */\n    handleScroll() {\n        this.renderer.listen(this.filteredListElement.nativeElement, 'scroll', () => {\n            this.scrollToEnd();\n        });\n    }\n    /**\n     * Define panel state\n     */\n    setPanelState(event) {\n        if (event) {\n            event.stopPropagation();\n        }\n        // If controls are untouched\n        if (typeof this.manualOpen === 'undefined'\n            && typeof this.manualClose === 'undefined') {\n            this.isOpen = false;\n            this.handleOpen();\n        }\n        // If one of the controls is untouched and other is deactivated\n        if (typeof this.manualOpen === 'undefined'\n            && this.manualClose === false\n            || typeof this.manualClose === 'undefined'\n                && this.manualOpen === false) {\n            this.isOpen = false;\n            this.handleOpen();\n        }\n        // if controls are touched but both are deactivated\n        if (this.manualOpen === false && this.manualClose === false) {\n            this.isOpen = false;\n            this.handleOpen();\n        }\n        // if open control is touched and activated\n        if (this.manualOpen) {\n            this.isOpen = false;\n            this.handleOpen();\n            this.manualOpen = false;\n        }\n        // if close control is touched and activated\n        if (this.manualClose) {\n            this.isOpen = true;\n            this.handleClose();\n            this.manualClose = false;\n        }\n    }\n    /**\n     * Manual controls\n     */\n    open() {\n        this.manualOpen = true;\n        this.isOpen = false;\n        this.handleOpen();\n    }\n    close() {\n        this.manualClose = true;\n        this.isOpen = true;\n        this.handleClose();\n    }\n    focus() {\n        this.handleFocus(event);\n    }\n    clear() {\n        this.remove(event);\n    }\n    /**\n     * Remove search query\n     */\n    remove(e) {\n        e.stopPropagation();\n        this.query = '';\n        this.inputCleared.emit();\n        this.propagateChange(this.query);\n        this.setPanelState(e);\n        if (this.data && !this.data.length) {\n            this.notFound = false;\n        }\n    }\n    /**\n     * Initialize historyList search\n     */\n    initSearchHistory() {\n        this.isHistoryListVisible = false;\n        if (this.historyIdentifier && !this.query) {\n            const history = window.localStorage.getItem(`${this.historyIdentifier}`);\n            if (history) {\n                this.isHistoryListVisible = true;\n                this.filteredList = [];\n                this.historyList = history ? JSON.parse(history) : [];\n            }\n            else {\n                this.isHistoryListVisible = false;\n            }\n        }\n        else {\n            this.isHistoryListVisible = false;\n        }\n    }\n    handleOpen() {\n        if (this.isOpen || this.isOpen && !this.isLoading) {\n            return;\n        }\n        // If data exists\n        if (this.data && this.data.length) {\n            this.isOpen = true;\n            this.overlay = true;\n            this.filterList();\n            this.opened.emit();\n        }\n    }\n    handleClose() {\n        if (!this.isOpen) {\n            this.isFocused = false;\n            return;\n        }\n        this.isOpen = false;\n        this.overlay = false;\n        this.filteredList = [];\n        this.selectedIdx = -1;\n        this.notFound = false;\n        this.isHistoryListVisible = false;\n        this.isFocused = false;\n        this.closed.emit();\n    }\n    handleFocus(e) {\n        this.searchInput.nativeElement.focus();\n        if (this.isFocused) {\n            return;\n        }\n        this.inputFocused.emit(e);\n        // if data exists then open\n        if (this.data && this.data.length) {\n            this.setPanelState(e);\n        }\n        this.isFocused = true;\n    }\n    scrollToEnd() {\n        if (this.isScrollToEnd) {\n            return;\n        }\n        const scrollTop = this.filteredListElement.nativeElement\n            .scrollTop;\n        const scrollHeight = this.filteredListElement.nativeElement\n            .scrollHeight;\n        const elementHeight = this.filteredListElement.nativeElement\n            .clientHeight;\n        const atBottom = elementHeight != 0 && Math.abs(scrollHeight - elementHeight - scrollTop) < 1;\n        if (atBottom) {\n            this.scrolledToEnd.emit();\n            this.isScrollToEnd = true;\n        }\n    }\n    /**\n     * Initialize keyboard events\n     */\n    initEventStream() {\n        this.inputKeyUp$ = fromEvent(this.searchInput.nativeElement, 'keyup').pipe(map((e) => e));\n        this.inputKeyDown$ = fromEvent(this.searchInput.nativeElement, 'keydown').pipe(map((e) => e));\n        this.listenEventStream();\n    }\n    /**\n     * Listen keyboard events\n     */\n    listenEventStream() {\n        // key up event\n        this.inputKeyUp$\n            .pipe(filter(e => !isArrowUpDown(e.keyCode) &&\n            !isEnter(e.keyCode) &&\n            !isESC(e.keyCode) &&\n            !isTab(e.keyCode)), debounceTime(this.debounceTime)).subscribe(e => {\n            this.onKeyUp(e);\n        });\n        // cursor up & down\n        this.inputKeyDown$.pipe(filter(e => isArrowUpDown(e.keyCode))).subscribe(e => {\n            e.preventDefault();\n            this.onFocusItem(e);\n        });\n        // enter keyup\n        this.inputKeyUp$.pipe(filter(e => isEnter(e.keyCode))).subscribe(e => {\n            //this.onHandleEnter();\n        });\n        // enter keydown\n        this.inputKeyDown$.pipe(filter(e => isEnter(e.keyCode))).subscribe(e => {\n            this.onHandleEnter();\n        });\n        // ESC\n        this.inputKeyUp$.pipe(filter(e => isESC(e.keyCode), debounceTime(100))).subscribe(e => {\n            this.onEsc();\n        });\n        // TAB\n        this.inputKeyDown$.pipe(filter(e => isTab(e.keyCode))).subscribe(e => {\n            this.onTab();\n        });\n        // delete\n        this.inputKeyDown$.pipe(filter(e => isBackspace(e.keyCode) || isDelete(e.keyCode))).subscribe(e => {\n            this.onDelete();\n        });\n    }\n    /**\n     * on keyup == when input changed\n     * @param e event\n     */\n    onKeyUp(e) {\n        this.notFound = false; // search results are unknown while typing\n        // if input is empty\n        if (!this.query) {\n            this.notFound = false;\n            this.inputChanged.emit(e.target.value);\n            this.inputCleared.emit();\n            this.setPanelState(e);\n        }\n        // note that '' can be a valid query\n        if (!this.query && this.query !== '') {\n            return;\n        }\n        // if query >= to minQueryLength\n        if (this.query.length >= this.minQueryLength) {\n            this.inputChanged.emit(e.target.value);\n            this.filterList();\n            // If no results found\n            if (!this.filteredList.length && !this.isLoading) {\n                this.notFoundText ? this.notFound = true : this.notFound = false;\n            }\n            if (this.data && !this.data.length) {\n                this.isOpen = true;\n            }\n        }\n    }\n    /**\n     * Keyboard arrow top and arrow bottom\n     * @param e event\n     */\n    onFocusItem(e) {\n        // move arrow up and down on filteredList or historyList\n        if (!this.historyList.length || !this.isHistoryListVisible) {\n            // filteredList\n            const totalNumItem = this.filteredList.length;\n            if (e.key === 'ArrowDown') {\n                let sum = this.selectedIdx;\n                sum = (this.selectedIdx === null) ? 0 : sum + 1;\n                this.selectedIdx = (totalNumItem + sum) % totalNumItem;\n                this.scrollToFocusedItem(this.selectedIdx);\n            }\n            else if (e.key === 'ArrowUp') {\n                if (this.selectedIdx == -1) {\n                    this.selectedIdx = 0;\n                }\n                this.selectedIdx = (totalNumItem + this.selectedIdx - 1) % totalNumItem;\n                this.scrollToFocusedItem(this.selectedIdx);\n            }\n        }\n        else {\n            // historyList\n            const totalNumItem = this.historyList.length;\n            if (e.key === 'ArrowDown') {\n                let sum = this.selectedIdx;\n                sum = (this.selectedIdx === null) ? 0 : sum + 1;\n                this.selectedIdx = (totalNumItem + sum) % totalNumItem;\n                this.scrollToFocusedItem(this.selectedIdx);\n            }\n            else if (e.key === 'ArrowUp') {\n                if (this.selectedIdx == -1) {\n                    this.selectedIdx = 0;\n                }\n                this.selectedIdx = (totalNumItem + this.selectedIdx - 1) % totalNumItem;\n                this.scrollToFocusedItem(this.selectedIdx);\n            }\n        }\n    }\n    /**\n     * Scroll to focused item\n     * * @param index\n     */\n    scrollToFocusedItem(index) {\n        let listElement = null;\n        // Define list element\n        if (!this.historyList.length || !this.isHistoryListVisible) {\n            // filteredList element\n            listElement = this.filteredListElement.nativeElement;\n        }\n        else {\n            // historyList element\n            listElement = this.historyListElement.nativeElement;\n        }\n        const items = Array.prototype.slice.call(listElement.childNodes).filter((node) => {\n            if (node.nodeType === 1) {\n                // if node is element\n                return node.className.includes('item');\n            }\n            else {\n                return false;\n            }\n        });\n        if (!items.length) {\n            return;\n        }\n        const listHeight = listElement.offsetHeight;\n        const itemHeight = items[index].offsetHeight;\n        const visibleTop = listElement.scrollTop;\n        const visibleBottom = listElement.scrollTop + listHeight - itemHeight;\n        const targetPosition = items[index].offsetTop;\n        if (targetPosition < visibleTop) {\n            listElement.scrollTop = targetPosition;\n        }\n        if (targetPosition > visibleBottom) {\n            listElement.scrollTop = targetPosition - listHeight + itemHeight;\n        }\n    }\n    /**\n     * Select item on enter click\n     */\n    onHandleEnter() {\n        // click enter to choose item from filteredList or historyList\n        if (this.selectedIdx > -1) {\n            if (!this.historyList.length || !this.isHistoryListVisible) {\n                // filteredList\n                this.query = !this.isTypeString(this.filteredList[this.selectedIdx])\n                    ? this.filteredList[this.selectedIdx][this.searchKeyword]\n                    : this.filteredList[this.selectedIdx];\n                this.saveHistory(this.filteredList[this.selectedIdx]);\n                this.select(this.filteredList[this.selectedIdx]);\n            }\n            else {\n                // historyList\n                this.query = !this.isTypeString(this.historyList[this.selectedIdx])\n                    ? this.historyList[this.selectedIdx][this.searchKeyword]\n                    : this.historyList[this.selectedIdx];\n                this.saveHistory(this.historyList[this.selectedIdx]);\n                this.select(this.historyList[this.selectedIdx]);\n            }\n        }\n        this.isHistoryListVisible = false;\n        this.handleClose();\n    }\n    /**\n     * Esc click\n     */\n    onEsc() {\n        this.searchInput.nativeElement.blur();\n        this.handleClose();\n    }\n    /**\n     * Tab click\n     */\n    onTab() {\n        this.searchInput.nativeElement.blur();\n        this.handleClose();\n    }\n    /**\n     * Delete click\n     */\n    onDelete() {\n        this.isOpen = true;\n    }\n    /**\n     * Select item to save in localStorage\n     * @param selected\n     */\n    saveHistory(selected) {\n        if (this.historyIdentifier) {\n            // check if selected item exists in historyList\n            if (!this.historyList.some((item) => !this.isTypeString(item)\n                ? item[this.searchKeyword] == selected[this.searchKeyword] : item == selected)) {\n                this.saveHistoryToLocalStorage([selected, ...this.historyList]);\n                // check if items don't exceed max allowed number\n                if (this.historyList.length >= this.historyListMaxNumber) {\n                    this.historyList.splice(this.historyList.length - 1, 1);\n                    this.saveHistoryToLocalStorage([selected, ...this.historyList]);\n                }\n            }\n            else {\n                // if selected item exists in historyList swap to top in array\n                if (!this.isTypeString(selected)) {\n                    // object logic\n                    const copiedHistoryList = this.historyList.slice(); // copy original historyList array\n                    const selectedIndex = copiedHistoryList.map((item) => item[this.searchKeyword]).indexOf(selected[this.searchKeyword]);\n                    copiedHistoryList.splice(selectedIndex, 1);\n                    copiedHistoryList.splice(0, 0, selected);\n                    this.saveHistoryToLocalStorage([...copiedHistoryList]);\n                }\n                else {\n                    // string logic\n                    const copiedHistoryList = this.historyList.slice(); // copy original historyList array\n                    copiedHistoryList.splice(this.historyList.indexOf(selected), 1);\n                    copiedHistoryList.splice(0, 0, selected);\n                    this.saveHistoryToLocalStorage([...copiedHistoryList]);\n                }\n            }\n        }\n    }\n    /**\n     * Save item in localStorage\n     * @param selected\n     */\n    saveHistoryToLocalStorage(selected) {\n        window.localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(selected));\n    }\n    /**\n     * Remove item from localStorage\n     * @param index\n     * @param e event\n     */\n    removeHistoryItem(index, e) {\n        e.stopPropagation();\n        this.historyList = this.historyList.filter((v, i) => i !== index);\n        this.saveHistoryToLocalStorage(this.historyList);\n        if (this.historyList.length == 0) {\n            window.localStorage.removeItem(`${this.historyIdentifier}`);\n            this.filterList();\n        }\n    }\n    /**\n     * Reset localStorage\n     * @param e event\n     */\n    resetHistoryList(e) {\n        e.stopPropagation();\n        this.historyList = [];\n        window.localStorage.removeItem(`${this.historyIdentifier}`);\n        this.filterList();\n    }\n}\nAutocompleteComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: AutocompleteComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\nAutocompleteComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.1\", type: AutocompleteComponent, selector: \"ng-autocomplete\", inputs: { data: \"data\", searchKeyword: \"searchKeyword\", placeholder: \"placeholder\", heading: \"heading\", initialValue: \"initialValue\", historyIdentifier: \"historyIdentifier\", historyHeading: \"historyHeading\", historyListMaxNumber: \"historyListMaxNumber\", notFoundText: \"notFoundText\", isLoading: \"isLoading\", debounceTime: \"debounceTime\", disabled: \"disabled\", minQueryLength: \"minQueryLength\", focusFirst: \"focusFirst\", customFilter: \"customFilter\", selectedValueRender: \"selectedValueRender\", itemTemplate: \"itemTemplate\", notFoundTemplate: \"notFoundTemplate\" }, outputs: { selected: \"selected\", inputChanged: \"inputChanged\", inputFocused: \"inputFocused\", inputCleared: \"inputCleared\", opened: \"opened\", closed: \"closed\", scrolledToEnd: \"scrolledToEnd\" }, host: { listeners: { \"document:click\": \"handleClick($event)\" }, classAttribute: \"ng-autocomplete\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => AutocompleteComponent),\n            multi: true\n        }\n    ], queries: [{ propertyName: \"customTemplate\", first: true, predicate: TemplateRef, descendants: true }], viewQueries: [{ propertyName: \"searchInput\", first: true, predicate: [\"searchInput\"], descendants: true }, { propertyName: \"filteredListElement\", first: true, predicate: [\"filteredListElement\"], descendants: true }, { propertyName: \"historyListElement\", first: true, predicate: [\"historyListElement\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"autocomplete-container\\\" aria-owns=\\\"suggestions suggestions-history\\\" [attr.aria-expanded]=\\\"isOpen\\\"\\n     [ngClass]=\\\"{ 'active': isOpen}\\\">\\n  <div class=\\\"input-container\\\">\\n    <input #searchInput\\n           type=\\\"text\\\"\\n           attr.aria-label=\\\"{{placeholder}}\\\"\\n           aria-autocomplete=\\\"list\\\"\\n           role=\\\"combobox\\\"\\n           placeholder={{placeholder}}\\n           [(ngModel)]=query\\n           (input)=\\\"onChange($event)\\\"\\n           (focus)=handleFocus($event)\\n           (blur)=onTouched($event)\\n           [disabled]=\\\"disabled\\\"\\n           autocomplete=\\\"off\\\">\\n    <div class=\\\"x\\\" *ngIf=\\\"query && !isLoading && !disabled\\\" (click)=\\\"remove($event)\\\">\\n      <i class=\\\"material-icons\\\" aria-label=\\\"Close\\\">close</i>\\n    </div>\\n    <!--Loading mask-->\\n    <div class=\\\"sk-fading-circle\\\" *ngIf=\\\"isLoading\\\">\\n      <div class=\\\"sk-circle1 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle2 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle3 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle4 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle5 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle6 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle7 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle8 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle9 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle10 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle11 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle12 sk-circle\\\"></div>\\n    </div>\\n  </div>\\n\\n  <!--FilteredList items-->\\n  <div class=\\\"suggestions-container\\\" id=\\\"suggestions\\\" role=\\\"listbox\\\"\\n       [ngClass]=\\\"{ 'is-hidden': isHistoryListVisible, 'is-visible': !isHistoryListVisible}\\\">\\n    <!--FilteredList heading-->\\n    <div class=\\\"heading\\\" *ngIf=\\\"filteredList.length > 0 && heading\\\">\\n      <div class=\\\"text\\\">{{heading}}</div>\\n    </div>\\n\\n    <ul #filteredListElement>\\n      <li *ngFor=\\\"let item of filteredList; let idx = index\\\" class=\\\"item\\\">\\n        <!--string logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='isTypeString(item)'\\n             (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate;  context: { $implicit: item | highlight: toHighlight }\\\">\\n          </ng-container>\\n        </div>\\n        <!--object logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='!isTypeString(item)'\\n             (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate; context: { $implicit: item | highlight: toHighlight : searchKeyword }\\\">\\n          </ng-container>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <!--HistoryList items-->\\n  <div class=\\\"suggestions-container\\\" id=\\\"suggestions-history\\\" role=\\\"listbox\\\"\\n       [ngClass]=\\\"{ 'is-hidden': !isHistoryListVisible, 'is-visible': isHistoryListVisible}\\\">\\n    <!--HistoryList heading-->\\n    <div class=\\\"heading\\\" *ngIf=\\\"historyList.length > 0 && historyHeading\\\">\\n      <div class=\\\"text\\\">{{historyHeading}}</div>\\n      <div class=\\\"x\\\" (click)=\\\"resetHistoryList($event)\\\">\\n        <i class=\\\"material-icons\\\" aria-label=\\\"Delete\\\">delete</i>\\n      </div>\\n    </div>\\n\\n    <ul #historyListElement>\\n      <li *ngFor=\\\"let item of historyList; let idx = index\\\" class=\\\"item\\\">\\n        <!--string logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='isTypeString(item)' (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate;  context: { $implicit: item }\\\">\\n          </ng-container>\\n        </div>\\n        <!--object logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='!isTypeString(item)' (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate; context: { $implicit: item }\\\">\\n          </ng-container>\\n        </div>\\n        <div class=\\\"x\\\" (click)=\\\"removeHistoryItem(idx, $event)\\\">\\n          <i class=\\\"material-icons\\\" aria-label=\\\"Close\\\">close</i>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <!--Not found-->\\n  <div class=\\\"not-found\\\" *ngIf=\\\"isLoading ? !isLoading && notFound : notFound\\\">\\n    <ng-container\\n      *ngTemplateOutlet=\\\"notFoundTemplate;  context: { $implicit: notFoundText  }\\\">\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"autocomplete-overlay\\\" *ngIf=\\\"overlay\\\" (click)=\\\"handleOverlay()\\\"></div>\\n\", styles: [\"@import\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\";.ng-autocomplete{width:600px}.autocomplete-container{box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;position:relative;overflow:visible;height:40px}.autocomplete-container .input-container input{font-size:14px;box-sizing:border-box;border:none;box-shadow:none;outline:none;background-color:#fff;color:#000000de;width:100%;padding:0 15px;line-height:40px;height:40px}.autocomplete-container .input-container input:disabled{background-color:#eee;color:#666}.autocomplete-container .input-container .x{position:absolute;right:10px;margin:auto;cursor:pointer;top:50%;transform:translateY(-50%)}.autocomplete-container .input-container .x i{color:#0000008a;font-size:22px;vertical-align:middle}.autocomplete-container .suggestions-container{position:absolute;width:100%;background:white;height:auto;box-shadow:0 2px 5px #00000040;box-sizing:border-box}.autocomplete-container .suggestions-container ul{padding:0;margin:0;max-height:240px;overflow-y:auto}.autocomplete-container .suggestions-container ul li{position:relative;list-style:none;padding:0;margin:0;cursor:pointer}.autocomplete-container .suggestions-container ul li a{padding:14px 15px;display:block;text-decoration:none;color:#333;cursor:pointer;color:#000000de;font-size:15px}.autocomplete-container .suggestions-container ul li:hover,.autocomplete-container .suggestions-container .complete-selected{background-color:#9e9e9e2e}.autocomplete-container .suggestions-container .heading{position:relative;padding:10px 15px;border:solid 1px #f1f1f1}.autocomplete-container .suggestions-container .heading .text{font-size:.85em}.autocomplete-container .suggestions-container .x{position:absolute;right:10px;margin:auto;cursor:pointer;top:50%;transform:translateY(-50%)}.autocomplete-container .suggestions-container .x i{color:#0000008a;font-size:18px;vertical-align:middle}.autocomplete-container .suggestions-container.is-hidden{visibility:hidden}.autocomplete-container .suggestions-container.is-visible{visibility:visible}.autocomplete-container .not-found{padding:0 .75em;border:solid 1px #f1f1f1;background:white}.autocomplete-container .not-found div{padding:.4em 0;font-size:.95em;line-height:1.4;border-bottom:1px solid rgba(230,230,230,.7)}.autocomplete-container.active{z-index:999}.highlight{font-weight:700}.autocomplete-overlay{position:fixed;background-color:transparent;width:100%;height:100%;top:0;right:0;bottom:0;left:0;z-index:50}input[type=text]::-ms-clear{display:none}.sk-fading-circle{width:20px;height:20px;position:absolute;right:10px;top:0;bottom:0;margin:auto}.sk-fading-circle .sk-circle{width:100%;height:100%;position:absolute;left:0;top:0}.sk-fading-circle .sk-circle:before{content:\\\"\\\";display:block;margin:0 auto;width:15%;height:15%;background-color:#333;border-radius:100%;animation:sk-circleFadeDelay 1.2s infinite ease-in-out both}.sk-fading-circle .sk-circle2{transform:rotate(30deg)}.sk-fading-circle .sk-circle3{transform:rotate(60deg)}.sk-fading-circle .sk-circle4{transform:rotate(90deg)}.sk-fading-circle .sk-circle5{transform:rotate(120deg)}.sk-fading-circle .sk-circle6{transform:rotate(150deg)}.sk-fading-circle .sk-circle7{transform:rotate(180deg)}.sk-fading-circle .sk-circle8{transform:rotate(210deg)}.sk-fading-circle .sk-circle9{transform:rotate(240deg)}.sk-fading-circle .sk-circle10{transform:rotate(270deg)}.sk-fading-circle .sk-circle11{transform:rotate(300deg)}.sk-fading-circle .sk-circle12{transform:rotate(330deg)}.sk-fading-circle .sk-circle2:before{animation-delay:-1.1s}.sk-fading-circle .sk-circle3:before{animation-delay:-1s}.sk-fading-circle .sk-circle4:before{animation-delay:-.9s}.sk-fading-circle .sk-circle5:before{animation-delay:-.8s}.sk-fading-circle .sk-circle6:before{animation-delay:-.7s}.sk-fading-circle .sk-circle7:before{animation-delay:-.6s}.sk-fading-circle .sk-circle8:before{animation-delay:-.5s}.sk-fading-circle .sk-circle9:before{animation-delay:-.4s}.sk-fading-circle .sk-circle10:before{animation-delay:-.3s}.sk-fading-circle .sk-circle11:before{animation-delay:-.2s}.sk-fading-circle .sk-circle12:before{animation-delay:-.1s}@keyframes sk-circleFadeDelay{0%,39%,to{opacity:0}40%{opacity:1}}\\n\"], directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], pipes: { \"highlight\": HighlightPipe }, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: AutocompleteComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ng-autocomplete', providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => AutocompleteComponent),\n                            multi: true\n                        }\n                    ], encapsulation: ViewEncapsulation.None, host: {\n                        '(document:click)': 'handleClick($event)',\n                        'class': 'ng-autocomplete'\n                    }, template: \"<div class=\\\"autocomplete-container\\\" aria-owns=\\\"suggestions suggestions-history\\\" [attr.aria-expanded]=\\\"isOpen\\\"\\n     [ngClass]=\\\"{ 'active': isOpen}\\\">\\n  <div class=\\\"input-container\\\">\\n    <input #searchInput\\n           type=\\\"text\\\"\\n           attr.aria-label=\\\"{{placeholder}}\\\"\\n           aria-autocomplete=\\\"list\\\"\\n           role=\\\"combobox\\\"\\n           placeholder={{placeholder}}\\n           [(ngModel)]=query\\n           (input)=\\\"onChange($event)\\\"\\n           (focus)=handleFocus($event)\\n           (blur)=onTouched($event)\\n           [disabled]=\\\"disabled\\\"\\n           autocomplete=\\\"off\\\">\\n    <div class=\\\"x\\\" *ngIf=\\\"query && !isLoading && !disabled\\\" (click)=\\\"remove($event)\\\">\\n      <i class=\\\"material-icons\\\" aria-label=\\\"Close\\\">close</i>\\n    </div>\\n    <!--Loading mask-->\\n    <div class=\\\"sk-fading-circle\\\" *ngIf=\\\"isLoading\\\">\\n      <div class=\\\"sk-circle1 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle2 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle3 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle4 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle5 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle6 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle7 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle8 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle9 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle10 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle11 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle12 sk-circle\\\"></div>\\n    </div>\\n  </div>\\n\\n  <!--FilteredList items-->\\n  <div class=\\\"suggestions-container\\\" id=\\\"suggestions\\\" role=\\\"listbox\\\"\\n       [ngClass]=\\\"{ 'is-hidden': isHistoryListVisible, 'is-visible': !isHistoryListVisible}\\\">\\n    <!--FilteredList heading-->\\n    <div class=\\\"heading\\\" *ngIf=\\\"filteredList.length > 0 && heading\\\">\\n      <div class=\\\"text\\\">{{heading}}</div>\\n    </div>\\n\\n    <ul #filteredListElement>\\n      <li *ngFor=\\\"let item of filteredList; let idx = index\\\" class=\\\"item\\\">\\n        <!--string logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='isTypeString(item)'\\n             (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate;  context: { $implicit: item | highlight: toHighlight }\\\">\\n          </ng-container>\\n        </div>\\n        <!--object logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='!isTypeString(item)'\\n             (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate; context: { $implicit: item | highlight: toHighlight : searchKeyword }\\\">\\n          </ng-container>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <!--HistoryList items-->\\n  <div class=\\\"suggestions-container\\\" id=\\\"suggestions-history\\\" role=\\\"listbox\\\"\\n       [ngClass]=\\\"{ 'is-hidden': !isHistoryListVisible, 'is-visible': isHistoryListVisible}\\\">\\n    <!--HistoryList heading-->\\n    <div class=\\\"heading\\\" *ngIf=\\\"historyList.length > 0 && historyHeading\\\">\\n      <div class=\\\"text\\\">{{historyHeading}}</div>\\n      <div class=\\\"x\\\" (click)=\\\"resetHistoryList($event)\\\">\\n        <i class=\\\"material-icons\\\" aria-label=\\\"Delete\\\">delete</i>\\n      </div>\\n    </div>\\n\\n    <ul #historyListElement>\\n      <li *ngFor=\\\"let item of historyList; let idx = index\\\" class=\\\"item\\\">\\n        <!--string logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='isTypeString(item)' (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate;  context: { $implicit: item }\\\">\\n          </ng-container>\\n        </div>\\n        <!--object logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='!isTypeString(item)' (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate; context: { $implicit: item }\\\">\\n          </ng-container>\\n        </div>\\n        <div class=\\\"x\\\" (click)=\\\"removeHistoryItem(idx, $event)\\\">\\n          <i class=\\\"material-icons\\\" aria-label=\\\"Close\\\">close</i>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <!--Not found-->\\n  <div class=\\\"not-found\\\" *ngIf=\\\"isLoading ? !isLoading && notFound : notFound\\\">\\n    <ng-container\\n      *ngTemplateOutlet=\\\"notFoundTemplate;  context: { $implicit: notFoundText  }\\\">\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"autocomplete-overlay\\\" *ngIf=\\\"overlay\\\" (click)=\\\"handleOverlay()\\\"></div>\\n\", styles: [\"@import\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\";.ng-autocomplete{width:600px}.autocomplete-container{box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;position:relative;overflow:visible;height:40px}.autocomplete-container .input-container input{font-size:14px;box-sizing:border-box;border:none;box-shadow:none;outline:none;background-color:#fff;color:#000000de;width:100%;padding:0 15px;line-height:40px;height:40px}.autocomplete-container .input-container input:disabled{background-color:#eee;color:#666}.autocomplete-container .input-container .x{position:absolute;right:10px;margin:auto;cursor:pointer;top:50%;transform:translateY(-50%)}.autocomplete-container .input-container .x i{color:#0000008a;font-size:22px;vertical-align:middle}.autocomplete-container .suggestions-container{position:absolute;width:100%;background:white;height:auto;box-shadow:0 2px 5px #00000040;box-sizing:border-box}.autocomplete-container .suggestions-container ul{padding:0;margin:0;max-height:240px;overflow-y:auto}.autocomplete-container .suggestions-container ul li{position:relative;list-style:none;padding:0;margin:0;cursor:pointer}.autocomplete-container .suggestions-container ul li a{padding:14px 15px;display:block;text-decoration:none;color:#333;cursor:pointer;color:#000000de;font-size:15px}.autocomplete-container .suggestions-container ul li:hover,.autocomplete-container .suggestions-container .complete-selected{background-color:#9e9e9e2e}.autocomplete-container .suggestions-container .heading{position:relative;padding:10px 15px;border:solid 1px #f1f1f1}.autocomplete-container .suggestions-container .heading .text{font-size:.85em}.autocomplete-container .suggestions-container .x{position:absolute;right:10px;margin:auto;cursor:pointer;top:50%;transform:translateY(-50%)}.autocomplete-container .suggestions-container .x i{color:#0000008a;font-size:18px;vertical-align:middle}.autocomplete-container .suggestions-container.is-hidden{visibility:hidden}.autocomplete-container .suggestions-container.is-visible{visibility:visible}.autocomplete-container .not-found{padding:0 .75em;border:solid 1px #f1f1f1;background:white}.autocomplete-container .not-found div{padding:.4em 0;font-size:.95em;line-height:1.4;border-bottom:1px solid rgba(230,230,230,.7)}.autocomplete-container.active{z-index:999}.highlight{font-weight:700}.autocomplete-overlay{position:fixed;background-color:transparent;width:100%;height:100%;top:0;right:0;bottom:0;left:0;z-index:50}input[type=text]::-ms-clear{display:none}.sk-fading-circle{width:20px;height:20px;position:absolute;right:10px;top:0;bottom:0;margin:auto}.sk-fading-circle .sk-circle{width:100%;height:100%;position:absolute;left:0;top:0}.sk-fading-circle .sk-circle:before{content:\\\"\\\";display:block;margin:0 auto;width:15%;height:15%;background-color:#333;border-radius:100%;animation:sk-circleFadeDelay 1.2s infinite ease-in-out both}.sk-fading-circle .sk-circle2{transform:rotate(30deg)}.sk-fading-circle .sk-circle3{transform:rotate(60deg)}.sk-fading-circle .sk-circle4{transform:rotate(90deg)}.sk-fading-circle .sk-circle5{transform:rotate(120deg)}.sk-fading-circle .sk-circle6{transform:rotate(150deg)}.sk-fading-circle .sk-circle7{transform:rotate(180deg)}.sk-fading-circle .sk-circle8{transform:rotate(210deg)}.sk-fading-circle .sk-circle9{transform:rotate(240deg)}.sk-fading-circle .sk-circle10{transform:rotate(270deg)}.sk-fading-circle .sk-circle11{transform:rotate(300deg)}.sk-fading-circle .sk-circle12{transform:rotate(330deg)}.sk-fading-circle .sk-circle2:before{animation-delay:-1.1s}.sk-fading-circle .sk-circle3:before{animation-delay:-1s}.sk-fading-circle .sk-circle4:before{animation-delay:-.9s}.sk-fading-circle .sk-circle5:before{animation-delay:-.8s}.sk-fading-circle .sk-circle6:before{animation-delay:-.7s}.sk-fading-circle .sk-circle7:before{animation-delay:-.6s}.sk-fading-circle .sk-circle8:before{animation-delay:-.5s}.sk-fading-circle .sk-circle9:before{animation-delay:-.4s}.sk-fading-circle .sk-circle10:before{animation-delay:-.3s}.sk-fading-circle .sk-circle11:before{animation-delay:-.2s}.sk-fading-circle .sk-circle12:before{animation-delay:-.1s}@keyframes sk-circleFadeDelay{0%,39%,to{opacity:0}40%{opacity:1}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { searchInput: [{\n                type: ViewChild,\n                args: ['searchInput']\n            }], filteredListElement: [{\n                type: ViewChild,\n                args: ['filteredListElement']\n            }], historyListElement: [{\n                type: ViewChild,\n                args: ['historyListElement']\n            }], data: [{\n                type: Input\n            }], searchKeyword: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], heading: [{\n                type: Input\n            }], initialValue: [{\n                type: Input\n            }], historyIdentifier: [{\n                type: Input\n            }], historyHeading: [{\n                type: Input\n            }], historyListMaxNumber: [{\n                type: Input\n            }], notFoundText: [{\n                type: Input\n            }], isLoading: [{\n                type: Input\n            }], debounceTime: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], minQueryLength: [{\n                type: Input\n            }], focusFirst: [{\n                type: Input\n            }], customFilter: [{\n                type: Input\n            }], selectedValueRender: [{\n                type: Input\n            }], selected: [{\n                type: Output\n            }], inputChanged: [{\n                type: Output\n            }], inputFocused: [{\n                type: Output\n            }], inputCleared: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], closed: [{\n                type: Output\n            }], scrolledToEnd: [{\n                type: Output\n            }], itemTemplate: [{\n                type: Input\n            }], notFoundTemplate: [{\n                type: Input\n            }], customTemplate: [{\n                type: ContentChild,\n                args: [TemplateRef]\n            }] } });\n\nclass AutocompleteLibModule {\n}\nAutocompleteLibModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: AutocompleteLibModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAutocompleteLibModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: AutocompleteLibModule, declarations: [AutocompleteComponent, HighlightPipe], imports: [CommonModule,\n        FormsModule], exports: [AutocompleteComponent, HighlightPipe] });\nAutocompleteLibModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: AutocompleteLibModule, imports: [[\n            CommonModule,\n            FormsModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.1\", ngImport: i0, type: AutocompleteLibModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule\n                    ],\n                    declarations: [AutocompleteComponent, HighlightPipe],\n                    exports: [AutocompleteComponent, HighlightPipe]\n                }]\n        }] });\n\n/*\n * Public API Surface of autocomplete-lib\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutocompleteComponent, AutocompleteLibModule, HighlightPipe };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}