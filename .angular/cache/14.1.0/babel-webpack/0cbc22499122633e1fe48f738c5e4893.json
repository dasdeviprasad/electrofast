{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Pipe, EventEmitter, forwardRef, TemplateRef, Component, ViewEncapsulation, ViewChild, Input, Output, ContentChild, NgModule } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { map, filter, debounceTime } from 'rxjs/operators';\nimport * as i2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"searchInput\"];\nconst _c1 = [\"filteredListElement\"];\nconst _c2 = [\"historyListElement\"];\n\nfunction AutocompleteComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function AutocompleteComponent_div_4_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.remove($event));\n    });\n    i0.ɵɵelementStart(1, \"i\", 15);\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AutocompleteComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelement(1, \"div\", 17)(2, \"div\", 18)(3, \"div\", 19)(4, \"div\", 20)(5, \"div\", 21)(6, \"div\", 22)(7, \"div\", 23)(8, \"div\", 24)(9, \"div\", 25)(10, \"div\", 26)(11, \"div\", 27)(12, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AutocompleteComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 30);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.heading);\n  }\n}\n\nfunction AutocompleteComponent_li_10_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c3 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction AutocompleteComponent_li_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵlistener(\"click\", function AutocompleteComponent_li_10_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const item_r13 = i0.ɵɵnextContext().$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.select(item_r13));\n    });\n    i0.ɵɵtemplate(1, AutocompleteComponent_li_10_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 34);\n    i0.ɵɵpipe(2, \"highlight\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext();\n    const idx_r14 = ctx_r21.index;\n    const item_r13 = ctx_r21.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"complete-selected\", idx_r14 === ctx_r15.selectedIdx);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r15.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(7, _c3, i0.ɵɵpipeBind2(2, 4, item_r13, ctx_r15.toHighlight)));\n  }\n}\n\nfunction AutocompleteComponent_li_10_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutocompleteComponent_li_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵlistener(\"click\", function AutocompleteComponent_li_10_div_2_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const item_r13 = i0.ɵɵnextContext().$implicit;\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.select(item_r13));\n    });\n    i0.ɵɵtemplate(1, AutocompleteComponent_li_10_div_2_ng_container_1_Template, 1, 0, \"ng-container\", 34);\n    i0.ɵɵpipe(2, \"highlight\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext();\n    const idx_r14 = ctx_r26.index;\n    const item_r13 = ctx_r26.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"complete-selected\", idx_r14 === ctx_r16.selectedIdx);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r16.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(8, _c3, i0.ɵɵpipeBind3(2, 4, item_r13, ctx_r16.toHighlight, ctx_r16.searchKeyword)));\n  }\n}\n\nfunction AutocompleteComponent_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 31);\n    i0.ɵɵtemplate(1, AutocompleteComponent_li_10_div_1_Template, 3, 9, \"div\", 32);\n    i0.ɵɵtemplate(2, AutocompleteComponent_li_10_div_2_Template, 3, 10, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r13 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.isTypeString(item_r13));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.isTypeString(item_r13));\n  }\n}\n\nfunction AutocompleteComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 30);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function AutocompleteComponent_div_12_Template_div_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.resetHistoryList($event));\n    });\n    i0.ɵɵelementStart(4, \"i\", 35);\n    i0.ɵɵtext(5, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r6.historyHeading);\n  }\n}\n\nfunction AutocompleteComponent_li_15_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutocompleteComponent_li_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r36 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵlistener(\"click\", function AutocompleteComponent_li_15_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r36);\n      const item_r29 = i0.ɵɵnextContext().$implicit;\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.select(item_r29));\n    });\n    i0.ɵɵtemplate(1, AutocompleteComponent_li_15_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 34);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r37 = i0.ɵɵnextContext();\n    const idx_r30 = ctx_r37.index;\n    const item_r29 = ctx_r37.$implicit;\n    const ctx_r31 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"complete-selected\", idx_r30 === ctx_r31.selectedIdx);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r31.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c3, item_r29));\n  }\n}\n\nfunction AutocompleteComponent_li_15_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutocompleteComponent_li_15_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r41 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵlistener(\"click\", function AutocompleteComponent_li_15_div_2_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const item_r29 = i0.ɵɵnextContext().$implicit;\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.select(item_r29));\n    });\n    i0.ɵɵtemplate(1, AutocompleteComponent_li_15_div_2_ng_container_1_Template, 1, 0, \"ng-container\", 34);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r42 = i0.ɵɵnextContext();\n    const idx_r30 = ctx_r42.index;\n    const item_r29 = ctx_r42.$implicit;\n    const ctx_r32 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"complete-selected\", idx_r30 === ctx_r32.selectedIdx);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r32.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c3, item_r29));\n  }\n}\n\nfunction AutocompleteComponent_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 31);\n    i0.ɵɵtemplate(1, AutocompleteComponent_li_15_div_1_Template, 2, 6, \"div\", 32);\n    i0.ɵɵtemplate(2, AutocompleteComponent_li_15_div_2_Template, 2, 6, \"div\", 32);\n    i0.ɵɵelementStart(3, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function AutocompleteComponent_li_15_Template_div_click_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r44);\n      const idx_r30 = restoredCtx.index;\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.removeHistoryItem(idx_r30, $event));\n    });\n    i0.ɵɵelementStart(4, \"i\", 15);\n    i0.ɵɵtext(5, \"close\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const item_r29 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.isTypeString(item_r29));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r8.isTypeString(item_r29));\n  }\n}\n\nfunction AutocompleteComponent_div_16_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutocompleteComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtemplate(1, AutocompleteComponent_div_16_ng_container_1_Template, 1, 0, \"ng-container\", 34);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r9.notFoundTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c3, ctx_r9.notFoundText));\n  }\n}\n\nfunction AutocompleteComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵlistener(\"click\", function AutocompleteComponent_div_17_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r46 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r46.handleOverlay());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c4 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\n\nconst _c5 = function (a0, a1) {\n  return {\n    \"is-hidden\": a0,\n    \"is-visible\": a1\n  };\n};\n\nclass HighlightPipe {\n  transform(text, search, searchKeyword) {\n    let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    pattern = pattern.split(' ').filter(t => {\n      return t.length > 0;\n    }).join('|');\n    const regex = new RegExp(pattern, 'gi');\n\n    if (!search) {\n      return text;\n    }\n\n    if (searchKeyword) {\n      const name = text[searchKeyword].replace(regex, match => `<b>${match}</b>`); // copy original object\n\n      const textCopied = { ...text\n      }; // set bold value into searchKeyword of copied object\n\n      textCopied[searchKeyword] = name;\n      return textCopied;\n    } else {\n      return search ? text.replace(regex, match => `<b>${match}</b>`) : text;\n    }\n  }\n\n}\n\nHighlightPipe.ɵfac = function HighlightPipe_Factory(t) {\n  return new (t || HighlightPipe)();\n};\n\nHighlightPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"highlight\",\n  type: HighlightPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HighlightPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'highlight'\n    }]\n  }], null, null);\n})();\n/**\n * Keyboard events\n */\n\n\nconst isArrowUp = keyCode => keyCode === 38;\n\nconst isArrowDown = keyCode => keyCode === 40;\n\nconst isArrowUpDown = keyCode => isArrowUp(keyCode) || isArrowDown(keyCode);\n\nconst isEnter = keyCode => keyCode === 13;\n\nconst isBackspace = keyCode => keyCode === 8;\n\nconst isDelete = keyCode => keyCode === 46;\n\nconst isESC = keyCode => keyCode === 27;\n\nconst isTab = keyCode => keyCode === 9;\n\nclass AutocompleteComponent {\n  constructor(elementRef, renderer) {\n    this.renderer = renderer;\n    this.query = ''; // search query\n\n    this.filteredList = []; // list of items\n\n    this.historyList = []; // list of history items\n\n    this.isHistoryListVisible = true;\n    this.selectedIdx = -1;\n    this.toHighlight = '';\n    this.notFound = false;\n    this.isFocused = false;\n    this.isOpen = false;\n    this.isScrollToEnd = false;\n    this.overlay = false;\n    this.manualOpen = false;\n    this.manualClose = false; // @Inputs\n\n    /**\n     * Data of items list.\n     * It can be array of strings or array of objects.\n     */\n\n    this.data = [];\n    this.searchKeyword = ''; // keyword to filter the list\n\n    this.placeholder = '';\n    this.heading = '';\n    /**\n     * Heading text of history list.\n     * If it is null then history heading is hidden.\n     */\n\n    this.historyHeading = 'Recently selected';\n    this.historyListMaxNumber = 15; // maximum number of items in the history list.\n\n    this.notFoundText = 'Not found'; // set custom text when filter returns empty result\n\n    this.debounceTime = 500; // delay time while typing\n\n    this.disabled = false; // input disable/enable\n\n    /**\n     * The minimum number of characters the user must type before a search is performed.\n     */\n\n    this.minQueryLength = 1;\n    /**\n     * Focus first item in the list\n     */\n\n    this.focusFirst = false; // @Output events\n\n    /** Event that is emitted whenever an item from the list is selected. */\n\n    this.selected = new EventEmitter();\n    /** Event that is emitted whenever an input is changed. */\n\n    this.inputChanged = new EventEmitter();\n    /** Event that is emitted whenever an input is focused. */\n\n    this.inputFocused = new EventEmitter();\n    /** Event that is emitted whenever an input is cleared. */\n\n    this.inputCleared = new EventEmitter();\n    /** Event that is emitted when the autocomplete panel is opened. */\n\n    this.opened = new EventEmitter();\n    /** Event that is emitted when the autocomplete panel is closed. */\n\n    this.closed = new EventEmitter();\n    /** Event that is emitted when scrolled to the end of items. */\n\n    this.scrolledToEnd = new EventEmitter();\n    /**\n     * Propagates new value when model changes\n     */\n\n    this.propagateChange = () => {};\n\n    this.onTouched = () => {};\n\n    this.elementRef = elementRef;\n  }\n  /**\n   * Writes a new value from the form model into the view,\n   * Updates model\n   */\n\n\n  writeValue(value = '') {\n    this.query = this.selectedValueRender !== undefined ? this.selectedValueRender(value) : this.defaultWriteValue(value);\n  }\n\n  defaultWriteValue(value) {\n    return value && !this.isTypeString(value) ? value[this.searchKeyword] : value;\n  }\n  /**\n   * Registers a handler that is called when something in the view has changed\n   */\n\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  /**\n   * Registers a handler specifically for when a control receives a touch event\n   */\n\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * Event that is called when the value of an input element is changed\n   */\n\n\n  onChange(event) {\n    this.propagateChange(event.target.value);\n  }\n  /**\n   * Event that is called when the control status changes to or from DISABLED\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    this.initEventStream();\n    this.handleScroll();\n  }\n  /**\n   * Set initial value\n   * @param value\n   */\n\n\n  setInitialValue(value) {\n    if (this.initialValue) {\n      this.select(value);\n    }\n  }\n  /**\n   * Update search results\n   */\n\n\n  ngOnChanges(changes) {\n    this.setInitialValue(this.initialValue);\n\n    if (changes && changes['data'] && Array.isArray(changes['data'].currentValue)) {\n      this.handleItemsChange();\n\n      if (!changes['data'].firstChange && this.isFocused) {\n        this.handleOpen();\n      }\n    }\n  }\n  /**\n   * Items change\n   */\n\n\n  handleItemsChange() {\n    this.isScrollToEnd = false;\n\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.filteredList = this.data;\n    this.notFound = !this.filteredList || this.filteredList.length === 0; // Filter list when updating data and panel is open\n\n    if (this.isOpen) {\n      this.filterList();\n    }\n  }\n  /**\n   * Filter data\n   */\n\n\n  filterList() {\n    this.selectedIdx = -1;\n    this.initSearchHistory();\n\n    if (this.query != null && this.data) {\n      this.toHighlight = this.query;\n      this.filteredList = this.customFilter !== undefined ? this.customFilter([...this.data], this.query) : this.defaultFilterFunction(); // If [focusFirst]=\"true\" automatically focus the first match\n\n      if (this.filteredList.length > 0 && this.focusFirst) {\n        this.selectedIdx = 0;\n      }\n    } else {\n      this.notFound = false;\n    }\n  }\n  /**\n   * Default filter function, used unless customFilter is provided\n   */\n\n\n  defaultFilterFunction() {\n    return this.data.filter(item => {\n      if (typeof item === 'string') {\n        // string logic, check equality of strings\n        return item.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n      } else if (typeof item === 'object' && item instanceof Object) {\n        // object logic, check property equality\n        return item[this.searchKeyword] ? item[this.searchKeyword].toLowerCase().indexOf(this.query.toLowerCase()) > -1 : \"\";\n      } else {\n        return false;\n      }\n    });\n  }\n  /**\n   * Check if item is a string in the list.\n   * @param item\n   */\n\n\n  isTypeString(item) {\n    return typeof item === 'string';\n  }\n  /**\n   * Select item in the list.\n   * @param item\n   */\n\n\n  select(item) {\n    this.query = !this.isTypeString(item) ? item[this.searchKeyword] : item;\n    this.isOpen = true;\n    this.overlay = false;\n    this.selected.emit(item);\n    this.propagateChange(item);\n\n    if (this.initialValue) {\n      // check if history already exists in localStorage and then update\n      const history = window.localStorage.getItem(`${this.historyIdentifier}`);\n\n      if (history) {\n        let existingHistory = JSON.parse(localStorage[`${this.historyIdentifier}`]);\n        if (!(existingHistory instanceof Array)) existingHistory = []; // check if selected item exists in existingHistory\n\n        if (!existingHistory.some(existingItem => !this.isTypeString(existingItem) ? existingItem[this.searchKeyword] == item[this.searchKeyword] : existingItem == item)) {\n          existingHistory.unshift(item);\n          localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(existingHistory)); // check if items don't exceed max allowed number\n\n          if (existingHistory.length >= this.historyListMaxNumber) {\n            existingHistory.splice(existingHistory.length - 1, 1);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(existingHistory));\n          }\n        } else {\n          // if selected item exists in existingHistory swap to top in array\n          if (!this.isTypeString(item)) {\n            // object logic\n            const copiedExistingHistory = existingHistory.slice(); // copy original existingHistory array\n\n            const selectedIndex = copiedExistingHistory.map(el => el[this.searchKeyword]).indexOf(item[this.searchKeyword]);\n            copiedExistingHistory.splice(selectedIndex, 1);\n            copiedExistingHistory.splice(0, 0, item);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(copiedExistingHistory));\n          } else {\n            // string logic\n            const copiedExistingHistory = existingHistory.slice(); // copy original existingHistory array\n\n            copiedExistingHistory.splice(copiedExistingHistory.indexOf(item), 1);\n            copiedExistingHistory.splice(0, 0, item);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(copiedExistingHistory));\n          }\n        }\n      } else {\n        this.saveHistory(item);\n      }\n    } else {\n      this.saveHistory(item);\n    }\n\n    this.handleClose();\n  }\n  /**\n   * Document click\n   * @param e event\n   */\n\n\n  handleClick(e) {\n    let clickedComponent = e.target;\n    let inside = false;\n\n    do {\n      if (clickedComponent === this.elementRef.nativeElement) {\n        inside = true;\n\n        if (this.filteredList.length) {\n          this.handleOpen();\n        }\n      }\n\n      clickedComponent = clickedComponent.parentNode;\n    } while (clickedComponent);\n\n    if (!inside) {\n      this.handleClose();\n    }\n  }\n  /**\n   * Handle body overlay\n   */\n\n\n  handleOverlay() {\n    this.overlay = false;\n  }\n  /**\n   * Scroll items\n   */\n\n\n  handleScroll() {\n    this.renderer.listen(this.filteredListElement?.nativeElement, 'scroll', () => {\n      this.scrollToEnd();\n    });\n  }\n  /**\n   * Define panel state\n   */\n\n\n  setPanelState(event) {\n    if (event) {\n      event.stopPropagation();\n    } // If controls are untouched\n\n\n    if (typeof this.manualOpen === 'undefined' && typeof this.manualClose === 'undefined') {\n      this.isOpen = false;\n      this.handleOpen();\n    } // If one of the controls is untouched and other is deactivated\n\n\n    if (typeof this.manualOpen === 'undefined' && this.manualClose === false || typeof this.manualClose === 'undefined' && this.manualOpen === false) {\n      this.isOpen = false;\n      this.handleOpen();\n    } // if controls are touched but both are deactivated\n\n\n    if (this.manualOpen === false && this.manualClose === false) {\n      this.isOpen = false;\n      this.handleOpen();\n    } // if open control is touched and activated\n\n\n    if (this.manualOpen) {\n      this.isOpen = false;\n      this.handleOpen();\n      this.manualOpen = false;\n    } // if close control is touched and activated\n\n\n    if (this.manualClose) {\n      this.isOpen = true;\n      this.handleClose();\n      this.manualClose = false;\n    }\n  }\n  /**\n   * Manual controls\n   */\n\n\n  open() {\n    this.manualOpen = true;\n    this.isOpen = false;\n    this.handleOpen();\n  }\n\n  close() {\n    this.manualClose = true;\n    this.isOpen = true;\n    this.handleClose();\n  }\n\n  focus() {\n    this.handleFocus(event);\n  }\n\n  clear() {\n    this.remove(event);\n  }\n  /**\n   * Remove search query\n   */\n\n\n  remove(e) {\n    e.stopPropagation();\n    this.query = '';\n    this.inputCleared.emit();\n    this.propagateChange(this.query);\n    this.setPanelState(e);\n\n    if (this.data && !this.data.length) {\n      this.notFound = false;\n    }\n  }\n  /**\n   * Initialize historyList search\n   */\n\n\n  initSearchHistory() {\n    this.isHistoryListVisible = false;\n\n    if (this.historyIdentifier && !this.query) {\n      const history = window.localStorage.getItem(`${this.historyIdentifier}`);\n\n      if (history) {\n        this.isHistoryListVisible = true;\n        this.filteredList = [];\n        this.historyList = history ? JSON.parse(history) : [];\n      } else {\n        this.isHistoryListVisible = false;\n      }\n    } else {\n      this.isHistoryListVisible = false;\n    }\n  }\n\n  handleOpen() {\n    if (this.isOpen || this.isOpen && !this.isLoading) {\n      return;\n    } // If data exists\n\n\n    if (this.data && this.data.length) {\n      this.isOpen = true;\n      this.overlay = true;\n      this.filterList();\n      this.opened.emit();\n    }\n  }\n\n  handleClose() {\n    if (!this.isOpen) {\n      this.isFocused = false;\n      return;\n    }\n\n    this.isOpen = false;\n    this.overlay = false;\n    this.filteredList = [];\n    this.selectedIdx = -1;\n    this.notFound = false;\n    this.isHistoryListVisible = false;\n    this.isFocused = false;\n    this.closed.emit();\n  }\n\n  handleFocus(e) {\n    this.searchInput?.nativeElement.focus();\n\n    if (this.isFocused) {\n      return;\n    }\n\n    this.inputFocused.emit(e); // if data exists then open\n\n    if (this.data && this.data.length) {\n      this.setPanelState(e);\n    }\n\n    this.isFocused = true;\n  }\n\n  scrollToEnd() {\n    if (this.isScrollToEnd) {\n      return;\n    }\n\n    const scrollTop = this.filteredListElement?.nativeElement.scrollTop;\n    const scrollHeight = this.filteredListElement?.nativeElement.scrollHeight;\n    const elementHeight = this.filteredListElement?.nativeElement.clientHeight;\n    const atBottom = elementHeight != 0 && Math.abs(scrollHeight - elementHeight - scrollTop) < 1;\n\n    if (atBottom) {\n      this.scrolledToEnd.emit();\n      this.isScrollToEnd = true;\n    }\n  }\n  /**\n   * Initialize keyboard events\n   */\n\n\n  initEventStream() {\n    this.inputKeyUp$ = fromEvent(this.searchInput?.nativeElement, 'keyup').pipe(map(e => e));\n    this.inputKeyDown$ = fromEvent(this.searchInput?.nativeElement, 'keydown').pipe(map(e => e));\n    this.listenEventStream();\n  }\n  /**\n   * Listen keyboard events\n   */\n\n\n  listenEventStream() {\n    // key up event\n    this.inputKeyUp$?.pipe(filter(e => !isArrowUpDown(e.keyCode) && !isEnter(e.keyCode) && !isESC(e.keyCode) && !isTab(e.keyCode)), debounceTime(this.debounceTime)).subscribe(e => {\n      this.onKeyUp(e);\n    }); // cursor up & down\n\n    this.inputKeyDown$?.pipe(filter(e => isArrowUpDown(e.keyCode))).subscribe(e => {\n      e.preventDefault();\n      this.onFocusItem(e);\n    }); // enter keyup\n\n    this.inputKeyUp$?.pipe(filter(e => isEnter(e.keyCode))).subscribe(e => {//this.onHandleEnter();\n    }); // enter keydown\n\n    this.inputKeyDown$?.pipe(filter(e => isEnter(e.keyCode))).subscribe(e => {\n      this.onHandleEnter();\n    }); // ESC\n\n    this.inputKeyUp$?.pipe(filter(e => isESC(e.keyCode), debounceTime(100))).subscribe(e => {\n      this.onEsc();\n    }); // TAB\n\n    this.inputKeyDown$?.pipe(filter(e => isTab(e.keyCode))).subscribe(e => {\n      this.onTab();\n    }); // delete\n\n    this.inputKeyDown$?.pipe(filter(e => isBackspace(e.keyCode) || isDelete(e.keyCode))).subscribe(e => {\n      this.onDelete();\n    });\n  }\n  /**\n   * on keyup == when input changed\n   * @param e event\n   */\n\n\n  onKeyUp(e) {\n    this.notFound = false; // search results are unknown while typing\n    // if input is empty\n\n    if (!this.query) {\n      this.notFound = false;\n      this.inputChanged.emit(e.target.value);\n      this.inputCleared.emit();\n      this.setPanelState(e);\n    } // note that '' can be a valid query\n\n\n    if (!this.query && this.query !== '') {\n      return;\n    } // if query >= to minQueryLength\n\n\n    if (this.query.length >= this.minQueryLength) {\n      this.inputChanged.emit(e.target.value);\n      this.filterList(); // If no results found\n\n      if (!this.filteredList.length && !this.isLoading) {\n        this.notFoundText ? this.notFound = true : this.notFound = false;\n      }\n\n      if (this.data && !this.data.length) {\n        this.isOpen = true;\n      }\n    }\n  }\n  /**\n   * Keyboard arrow top and arrow bottom\n   * @param e event\n   */\n\n\n  onFocusItem(e) {\n    // move arrow up and down on filteredList or historyList\n    if (!this.historyList.length || !this.isHistoryListVisible) {\n      // filteredList\n      const totalNumItem = this.filteredList.length;\n\n      if (e.key === 'ArrowDown') {\n        let sum = this.selectedIdx;\n        sum = this.selectedIdx === null ? 0 : sum + 1;\n        this.selectedIdx = (totalNumItem + sum) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      } else if (e.key === 'ArrowUp') {\n        if (this.selectedIdx == -1) {\n          this.selectedIdx = 0;\n        }\n\n        this.selectedIdx = (totalNumItem + this.selectedIdx - 1) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      }\n    } else {\n      // historyList\n      const totalNumItem = this.historyList.length;\n\n      if (e.key === 'ArrowDown') {\n        let sum = this.selectedIdx;\n        sum = this.selectedIdx === null ? 0 : sum + 1;\n        this.selectedIdx = (totalNumItem + sum) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      } else if (e.key === 'ArrowUp') {\n        if (this.selectedIdx == -1) {\n          this.selectedIdx = 0;\n        }\n\n        this.selectedIdx = (totalNumItem + this.selectedIdx - 1) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      }\n    }\n  }\n  /**\n   * Scroll to focused item\n   * * @param index\n   */\n\n\n  scrollToFocusedItem(index) {\n    let listElement = null; // Define list element\n\n    if (!this.historyList.length || !this.isHistoryListVisible) {\n      // filteredList element\n      listElement = this.filteredListElement?.nativeElement;\n    } else {\n      // historyList element\n      listElement = this.historyListElement?.nativeElement;\n    }\n\n    const items = Array.prototype.slice.call(listElement?.childNodes).filter(node => {\n      if (node.nodeType === 1) {\n        // if node is element\n        return node.className.includes('item');\n      } else {\n        return false;\n      }\n    });\n\n    if (!items.length) {\n      return;\n    }\n\n    const listHeight = listElement.offsetHeight;\n    const itemHeight = items[index].offsetHeight;\n    const visibleTop = listElement.scrollTop;\n    const visibleBottom = listElement.scrollTop + listHeight - itemHeight;\n    const targetPosition = items[index].offsetTop;\n\n    if (targetPosition < visibleTop) {\n      listElement.scrollTop = targetPosition;\n    }\n\n    if (targetPosition > visibleBottom) {\n      listElement.scrollTop = targetPosition - listHeight + itemHeight;\n    }\n  }\n  /**\n   * Select item on enter click\n   */\n\n\n  onHandleEnter() {\n    // click enter to choose item from filteredList or historyList\n    if (this.selectedIdx > -1) {\n      if (!this.historyList.length || !this.isHistoryListVisible) {\n        // filteredList\n        this.query = !this.isTypeString(this.filteredList[this.selectedIdx]) ? this.filteredList[this.selectedIdx][this.searchKeyword] : this.filteredList[this.selectedIdx];\n        this.saveHistory(this.filteredList[this.selectedIdx]);\n        this.select(this.filteredList[this.selectedIdx]);\n      } else {\n        // historyList\n        this.query = !this.isTypeString(this.historyList[this.selectedIdx]) ? this.historyList[this.selectedIdx][this.searchKeyword] : this.historyList[this.selectedIdx];\n        this.saveHistory(this.historyList[this.selectedIdx]);\n        this.select(this.historyList[this.selectedIdx]);\n      }\n    }\n\n    this.isHistoryListVisible = false;\n    this.handleClose();\n  }\n  /**\n   * Esc click\n   */\n\n\n  onEsc() {\n    this.searchInput?.nativeElement.blur();\n    this.handleClose();\n  }\n  /**\n   * Tab click\n   */\n\n\n  onTab() {\n    this.searchInput?.nativeElement.blur();\n    this.handleClose();\n  }\n  /**\n   * Delete click\n   */\n\n\n  onDelete() {\n    this.isOpen = true;\n  }\n  /**\n   * Select item to save in localStorage\n   * @param selected\n   */\n\n\n  saveHistory(selected) {\n    if (this.historyIdentifier) {\n      // check if selected item exists in historyList\n      if (!this.historyList.some(item => !this.isTypeString(item) ? item[this.searchKeyword] == selected[this.searchKeyword] : item == selected)) {\n        this.saveHistoryToLocalStorage([selected, ...this.historyList]); // check if items don't exceed max allowed number\n\n        if (this.historyList.length >= this.historyListMaxNumber) {\n          this.historyList.splice(this.historyList.length - 1, 1);\n          this.saveHistoryToLocalStorage([selected, ...this.historyList]);\n        }\n      } else {\n        // if selected item exists in historyList swap to top in array\n        if (!this.isTypeString(selected)) {\n          // object logic\n          const copiedHistoryList = this.historyList.slice(); // copy original historyList array\n\n          const selectedIndex = copiedHistoryList.map(item => item[this.searchKeyword]).indexOf(selected[this.searchKeyword]);\n          copiedHistoryList.splice(selectedIndex, 1);\n          copiedHistoryList.splice(0, 0, selected);\n          this.saveHistoryToLocalStorage([...copiedHistoryList]);\n        } else {\n          // string logic\n          const copiedHistoryList = this.historyList.slice(); // copy original historyList array\n\n          copiedHistoryList.splice(this.historyList.indexOf(selected), 1);\n          copiedHistoryList.splice(0, 0, selected);\n          this.saveHistoryToLocalStorage([...copiedHistoryList]);\n        }\n      }\n    }\n  }\n  /**\n   * Save item in localStorage\n   * @param selected\n   */\n\n\n  saveHistoryToLocalStorage(selected) {\n    window.localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(selected));\n  }\n  /**\n   * Remove item from localStorage\n   * @param index\n   * @param e event\n   */\n\n\n  removeHistoryItem(index, e) {\n    e.stopPropagation();\n    this.historyList = this.historyList.filter((v, i) => i !== index);\n    this.saveHistoryToLocalStorage(this.historyList);\n\n    if (this.historyList.length == 0) {\n      window.localStorage.removeItem(`${this.historyIdentifier}`);\n      this.filterList();\n    }\n  }\n  /**\n   * Reset localStorage\n   * @param e event\n   */\n\n\n  resetHistoryList(e) {\n    e.stopPropagation();\n    this.historyList = [];\n    window.localStorage.removeItem(`${this.historyIdentifier}`);\n    this.filterList();\n  }\n\n}\n\nAutocompleteComponent.ɵfac = function AutocompleteComponent_Factory(t) {\n  return new (t || AutocompleteComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nAutocompleteComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AutocompleteComponent,\n  selectors: [[\"ng-autocomplete\"]],\n  contentQueries: function AutocompleteComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, TemplateRef, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customTemplate = _t.first);\n    }\n  },\n  viewQuery: function AutocompleteComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchInput = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filteredListElement = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.historyListElement = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ng-autocomplete\"],\n  hostBindings: function AutocompleteComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function AutocompleteComponent_click_HostBindingHandler($event) {\n        return ctx.handleClick($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  inputs: {\n    data: \"data\",\n    searchKeyword: \"searchKeyword\",\n    placeholder: \"placeholder\",\n    heading: \"heading\",\n    initialValue: \"initialValue\",\n    historyIdentifier: \"historyIdentifier\",\n    historyHeading: \"historyHeading\",\n    historyListMaxNumber: \"historyListMaxNumber\",\n    notFoundText: \"notFoundText\",\n    isLoading: \"isLoading\",\n    debounceTime: \"debounceTime\",\n    disabled: \"disabled\",\n    minQueryLength: \"minQueryLength\",\n    focusFirst: \"focusFirst\",\n    customFilter: \"customFilter\",\n    selectedValueRender: \"selectedValueRender\",\n    itemTemplate: \"itemTemplate\",\n    notFoundTemplate: \"notFoundTemplate\"\n  },\n  outputs: {\n    selected: \"selected\",\n    inputChanged: \"inputChanged\",\n    inputFocused: \"inputFocused\",\n    inputCleared: \"inputCleared\",\n    opened: \"opened\",\n    closed: \"closed\",\n    scrolledToEnd: \"scrolledToEnd\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AutocompleteComponent),\n    multi: true\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 18,\n  vars: 24,\n  consts: [[\"aria-owns\", \"suggestions suggestions-history\", 1, \"autocomplete-container\", 3, \"ngClass\"], [1, \"input-container\"], [\"type\", \"text\", \"aria-autocomplete\", \"list\", \"role\", \"combobox\", \"autocomplete\", \"off\", 3, \"placeholder\", \"ngModel\", \"disabled\", \"ngModelChange\", \"input\", \"focus\", \"blur\"], [\"searchInput\", \"\"], [\"class\", \"x\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"sk-fading-circle\", 4, \"ngIf\"], [\"id\", \"suggestions\", \"role\", \"listbox\", 1, \"suggestions-container\", 3, \"ngClass\"], [\"class\", \"heading\", 4, \"ngIf\"], [\"filteredListElement\", \"\"], [\"class\", \"item\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"suggestions-history\", \"role\", \"listbox\", 1, \"suggestions-container\", 3, \"ngClass\"], [\"historyListElement\", \"\"], [\"class\", \"not-found\", 4, \"ngIf\"], [\"class\", \"autocomplete-overlay\", 3, \"click\", 4, \"ngIf\"], [1, \"x\", 3, \"click\"], [\"aria-label\", \"Close\", 1, \"material-icons\"], [1, \"sk-fading-circle\"], [1, \"sk-circle1\", \"sk-circle\"], [1, \"sk-circle2\", \"sk-circle\"], [1, \"sk-circle3\", \"sk-circle\"], [1, \"sk-circle4\", \"sk-circle\"], [1, \"sk-circle5\", \"sk-circle\"], [1, \"sk-circle6\", \"sk-circle\"], [1, \"sk-circle7\", \"sk-circle\"], [1, \"sk-circle8\", \"sk-circle\"], [1, \"sk-circle9\", \"sk-circle\"], [1, \"sk-circle10\", \"sk-circle\"], [1, \"sk-circle11\", \"sk-circle\"], [1, \"sk-circle12\", \"sk-circle\"], [1, \"heading\"], [1, \"text\"], [1, \"item\"], [3, \"complete-selected\", \"click\", 4, \"ngIf\"], [3, \"click\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"aria-label\", \"Delete\", 1, \"material-icons\"], [1, \"not-found\"], [1, \"autocomplete-overlay\", 3, \"click\"]],\n  template: function AutocompleteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"input\", 2, 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AutocompleteComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.query = $event;\n      })(\"input\", function AutocompleteComponent_Template_input_input_2_listener($event) {\n        return ctx.onChange($event);\n      })(\"focus\", function AutocompleteComponent_Template_input_focus_2_listener($event) {\n        return ctx.handleFocus($event);\n      })(\"blur\", function AutocompleteComponent_Template_input_blur_2_listener($event) {\n        return ctx.onTouched($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, AutocompleteComponent_div_4_Template, 3, 0, \"div\", 4);\n      i0.ɵɵtemplate(5, AutocompleteComponent_div_5_Template, 13, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 6);\n      i0.ɵɵtemplate(7, AutocompleteComponent_div_7_Template, 3, 1, \"div\", 7);\n      i0.ɵɵelementStart(8, \"ul\", null, 8);\n      i0.ɵɵtemplate(10, AutocompleteComponent_li_10_Template, 3, 2, \"li\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 10);\n      i0.ɵɵtemplate(12, AutocompleteComponent_div_12_Template, 6, 1, \"div\", 7);\n      i0.ɵɵelementStart(13, \"ul\", null, 11);\n      i0.ɵɵtemplate(15, AutocompleteComponent_li_15_Template, 6, 2, \"li\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(16, AutocompleteComponent_div_16_Template, 2, 4, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, AutocompleteComponent_div_17_Template, 1, 0, \"div\", 13);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c4, ctx.isOpen));\n      i0.ɵɵattribute(\"aria-expanded\", ctx.isOpen);\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.placeholder);\n      i0.ɵɵproperty(\"ngModel\", ctx.query)(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"aria-label\", ctx.placeholder);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.query && !ctx.isLoading && !ctx.disabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(18, _c5, ctx.isHistoryListVisible, !ctx.isHistoryListVisible));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.filteredList.length > 0 && ctx.heading);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filteredList);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(21, _c5, !ctx.isHistoryListVisible, ctx.isHistoryListVisible));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.historyList.length > 0 && ctx.historyHeading);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.historyList);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading ? !ctx.isLoading && ctx.notFound : ctx.notFound);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.overlay);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, HighlightPipe],\n  styles: [\"@import\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\";.ng-autocomplete{width:600px}.autocomplete-container{box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;position:relative;overflow:visible;height:40px}.autocomplete-container .input-container input{font-size:14px;box-sizing:border-box;border:none;box-shadow:none;outline:none;background-color:#fff;color:#000000de;width:100%;padding:0 15px;line-height:40px;height:40px}.autocomplete-container .input-container input:disabled{background-color:#eee;color:#666}.autocomplete-container .input-container .x{position:absolute;right:10px;margin:auto;cursor:pointer;top:50%;transform:translateY(-50%)}.autocomplete-container .input-container .x i{color:#0000008a;font-size:22px;vertical-align:middle}.autocomplete-container .suggestions-container{position:absolute;width:100%;background:white;height:auto;box-shadow:0 2px 5px #00000040;box-sizing:border-box}.autocomplete-container .suggestions-container ul{padding:0;margin:0;max-height:240px;overflow-y:auto}.autocomplete-container .suggestions-container ul li{position:relative;list-style:none;padding:0;margin:0;cursor:pointer}.autocomplete-container .suggestions-container ul li a{padding:14px 15px;display:block;text-decoration:none;color:#333;cursor:pointer;color:#000000de;font-size:15px}.autocomplete-container .suggestions-container ul li:hover,.autocomplete-container .suggestions-container .complete-selected{background-color:#9e9e9e2e}.autocomplete-container .suggestions-container .heading{position:relative;padding:10px 15px;border:solid 1px #f1f1f1}.autocomplete-container .suggestions-container .heading .text{font-size:.85em}.autocomplete-container .suggestions-container .x{position:absolute;right:10px;margin:auto;cursor:pointer;top:50%;transform:translateY(-50%)}.autocomplete-container .suggestions-container .x i{color:#0000008a;font-size:18px;vertical-align:middle}.autocomplete-container .suggestions-container.is-hidden{visibility:hidden}.autocomplete-container .suggestions-container.is-visible{visibility:visible}.autocomplete-container .not-found{padding:0 .75em;border:solid 1px #f1f1f1;background:white}.autocomplete-container .not-found div{padding:.4em 0;font-size:.95em;line-height:1.4;border-bottom:1px solid rgba(230,230,230,.7)}.autocomplete-container.active{z-index:999}.highlight{font-weight:700}.autocomplete-overlay{position:fixed;background-color:transparent;width:100%;height:100%;top:0;right:0;bottom:0;left:0;z-index:50}input[type=text]::-ms-clear{display:none}.sk-fading-circle{width:20px;height:20px;position:absolute;right:10px;top:0;bottom:0;margin:auto}.sk-fading-circle .sk-circle{width:100%;height:100%;position:absolute;left:0;top:0}.sk-fading-circle .sk-circle:before{content:\\\"\\\";display:block;margin:0 auto;width:15%;height:15%;background-color:#333;border-radius:100%;animation:sk-circleFadeDelay 1.2s infinite ease-in-out both}.sk-fading-circle .sk-circle2{transform:rotate(30deg)}.sk-fading-circle .sk-circle3{transform:rotate(60deg)}.sk-fading-circle .sk-circle4{transform:rotate(90deg)}.sk-fading-circle .sk-circle5{transform:rotate(120deg)}.sk-fading-circle .sk-circle6{transform:rotate(150deg)}.sk-fading-circle .sk-circle7{transform:rotate(180deg)}.sk-fading-circle .sk-circle8{transform:rotate(210deg)}.sk-fading-circle .sk-circle9{transform:rotate(240deg)}.sk-fading-circle .sk-circle10{transform:rotate(270deg)}.sk-fading-circle .sk-circle11{transform:rotate(300deg)}.sk-fading-circle .sk-circle12{transform:rotate(330deg)}.sk-fading-circle .sk-circle2:before{animation-delay:-1.1s}.sk-fading-circle .sk-circle3:before{animation-delay:-1s}.sk-fading-circle .sk-circle4:before{animation-delay:-.9s}.sk-fading-circle .sk-circle5:before{animation-delay:-.8s}.sk-fading-circle .sk-circle6:before{animation-delay:-.7s}.sk-fading-circle .sk-circle7:before{animation-delay:-.6s}.sk-fading-circle .sk-circle8:before{animation-delay:-.5s}.sk-fading-circle .sk-circle9:before{animation-delay:-.4s}.sk-fading-circle .sk-circle10:before{animation-delay:-.3s}.sk-fading-circle .sk-circle11:before{animation-delay:-.2s}.sk-fading-circle .sk-circle12:before{animation-delay:-.1s}@keyframes sk-circleFadeDelay{0%,39%,to{opacity:0}40%{opacity:1}}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutocompleteComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-autocomplete',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => AutocompleteComponent),\n        multi: true\n      }],\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '(document:click)': 'handleClick($event)',\n        'class': 'ng-autocomplete'\n      },\n      template: \"<div class=\\\"autocomplete-container\\\" aria-owns=\\\"suggestions suggestions-history\\\" [attr.aria-expanded]=\\\"isOpen\\\"\\n     [ngClass]=\\\"{ 'active': isOpen}\\\">\\n  <div class=\\\"input-container\\\">\\n    <input #searchInput\\n           type=\\\"text\\\"\\n           attr.aria-label=\\\"{{placeholder}}\\\"\\n           aria-autocomplete=\\\"list\\\"\\n           role=\\\"combobox\\\"\\n           placeholder={{placeholder}}\\n           [(ngModel)]=query\\n           (input)=\\\"onChange($event)\\\"\\n           (focus)=handleFocus($event)\\n           (blur)=onTouched($event)\\n           [disabled]=\\\"disabled\\\"\\n           autocomplete=\\\"off\\\">\\n    <div class=\\\"x\\\" *ngIf=\\\"query && !isLoading && !disabled\\\" (click)=\\\"remove($event)\\\">\\n      <i class=\\\"material-icons\\\" aria-label=\\\"Close\\\">close</i>\\n    </div>\\n    <!--Loading mask-->\\n    <div class=\\\"sk-fading-circle\\\" *ngIf=\\\"isLoading\\\">\\n      <div class=\\\"sk-circle1 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle2 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle3 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle4 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle5 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle6 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle7 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle8 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle9 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle10 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle11 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle12 sk-circle\\\"></div>\\n    </div>\\n  </div>\\n\\n  <!--FilteredList items-->\\n  <div class=\\\"suggestions-container\\\" id=\\\"suggestions\\\" role=\\\"listbox\\\"\\n       [ngClass]=\\\"{ 'is-hidden': isHistoryListVisible, 'is-visible': !isHistoryListVisible}\\\">\\n    <!--FilteredList heading-->\\n    <div class=\\\"heading\\\" *ngIf=\\\"filteredList.length > 0 && heading\\\">\\n      <div class=\\\"text\\\">{{heading}}</div>\\n    </div>\\n\\n    <ul #filteredListElement>\\n      <li *ngFor=\\\"let item of filteredList; let idx = index\\\" class=\\\"item\\\">\\n        <!--string logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='isTypeString(item)'\\n             (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate;  context: { $implicit: item | highlight: toHighlight }\\\">\\n          </ng-container>\\n        </div>\\n        <!--object logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='!isTypeString(item)'\\n             (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate; context: { $implicit: item | highlight: toHighlight : searchKeyword }\\\">\\n          </ng-container>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <!--HistoryList items-->\\n  <div class=\\\"suggestions-container\\\" id=\\\"suggestions-history\\\" role=\\\"listbox\\\"\\n       [ngClass]=\\\"{ 'is-hidden': !isHistoryListVisible, 'is-visible': isHistoryListVisible}\\\">\\n    <!--HistoryList heading-->\\n    <div class=\\\"heading\\\" *ngIf=\\\"historyList.length > 0 && historyHeading\\\">\\n      <div class=\\\"text\\\">{{historyHeading}}</div>\\n      <div class=\\\"x\\\" (click)=\\\"resetHistoryList($event)\\\">\\n        <i class=\\\"material-icons\\\" aria-label=\\\"Delete\\\">delete</i>\\n      </div>\\n    </div>\\n\\n    <ul #historyListElement>\\n      <li *ngFor=\\\"let item of historyList; let idx = index\\\" class=\\\"item\\\">\\n        <!--string logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='isTypeString(item)' (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate;  context: { $implicit: item }\\\">\\n          </ng-container>\\n        </div>\\n        <!--object logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='!isTypeString(item)' (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate; context: { $implicit: item }\\\">\\n          </ng-container>\\n        </div>\\n        <div class=\\\"x\\\" (click)=\\\"removeHistoryItem(idx, $event)\\\">\\n          <i class=\\\"material-icons\\\" aria-label=\\\"Close\\\">close</i>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <!--Not found-->\\n  <div class=\\\"not-found\\\" *ngIf=\\\"isLoading ? !isLoading && notFound : notFound\\\">\\n    <ng-container\\n      *ngTemplateOutlet=\\\"notFoundTemplate;  context: { $implicit: notFoundText  }\\\">\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"autocomplete-overlay\\\" *ngIf=\\\"overlay\\\" (click)=\\\"handleOverlay()\\\"></div>\\n\",\n      styles: [\"@import\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\";.ng-autocomplete{width:600px}.autocomplete-container{box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;position:relative;overflow:visible;height:40px}.autocomplete-container .input-container input{font-size:14px;box-sizing:border-box;border:none;box-shadow:none;outline:none;background-color:#fff;color:#000000de;width:100%;padding:0 15px;line-height:40px;height:40px}.autocomplete-container .input-container input:disabled{background-color:#eee;color:#666}.autocomplete-container .input-container .x{position:absolute;right:10px;margin:auto;cursor:pointer;top:50%;transform:translateY(-50%)}.autocomplete-container .input-container .x i{color:#0000008a;font-size:22px;vertical-align:middle}.autocomplete-container .suggestions-container{position:absolute;width:100%;background:white;height:auto;box-shadow:0 2px 5px #00000040;box-sizing:border-box}.autocomplete-container .suggestions-container ul{padding:0;margin:0;max-height:240px;overflow-y:auto}.autocomplete-container .suggestions-container ul li{position:relative;list-style:none;padding:0;margin:0;cursor:pointer}.autocomplete-container .suggestions-container ul li a{padding:14px 15px;display:block;text-decoration:none;color:#333;cursor:pointer;color:#000000de;font-size:15px}.autocomplete-container .suggestions-container ul li:hover,.autocomplete-container .suggestions-container .complete-selected{background-color:#9e9e9e2e}.autocomplete-container .suggestions-container .heading{position:relative;padding:10px 15px;border:solid 1px #f1f1f1}.autocomplete-container .suggestions-container .heading .text{font-size:.85em}.autocomplete-container .suggestions-container .x{position:absolute;right:10px;margin:auto;cursor:pointer;top:50%;transform:translateY(-50%)}.autocomplete-container .suggestions-container .x i{color:#0000008a;font-size:18px;vertical-align:middle}.autocomplete-container .suggestions-container.is-hidden{visibility:hidden}.autocomplete-container .suggestions-container.is-visible{visibility:visible}.autocomplete-container .not-found{padding:0 .75em;border:solid 1px #f1f1f1;background:white}.autocomplete-container .not-found div{padding:.4em 0;font-size:.95em;line-height:1.4;border-bottom:1px solid rgba(230,230,230,.7)}.autocomplete-container.active{z-index:999}.highlight{font-weight:700}.autocomplete-overlay{position:fixed;background-color:transparent;width:100%;height:100%;top:0;right:0;bottom:0;left:0;z-index:50}input[type=text]::-ms-clear{display:none}.sk-fading-circle{width:20px;height:20px;position:absolute;right:10px;top:0;bottom:0;margin:auto}.sk-fading-circle .sk-circle{width:100%;height:100%;position:absolute;left:0;top:0}.sk-fading-circle .sk-circle:before{content:\\\"\\\";display:block;margin:0 auto;width:15%;height:15%;background-color:#333;border-radius:100%;animation:sk-circleFadeDelay 1.2s infinite ease-in-out both}.sk-fading-circle .sk-circle2{transform:rotate(30deg)}.sk-fading-circle .sk-circle3{transform:rotate(60deg)}.sk-fading-circle .sk-circle4{transform:rotate(90deg)}.sk-fading-circle .sk-circle5{transform:rotate(120deg)}.sk-fading-circle .sk-circle6{transform:rotate(150deg)}.sk-fading-circle .sk-circle7{transform:rotate(180deg)}.sk-fading-circle .sk-circle8{transform:rotate(210deg)}.sk-fading-circle .sk-circle9{transform:rotate(240deg)}.sk-fading-circle .sk-circle10{transform:rotate(270deg)}.sk-fading-circle .sk-circle11{transform:rotate(300deg)}.sk-fading-circle .sk-circle12{transform:rotate(330deg)}.sk-fading-circle .sk-circle2:before{animation-delay:-1.1s}.sk-fading-circle .sk-circle3:before{animation-delay:-1s}.sk-fading-circle .sk-circle4:before{animation-delay:-.9s}.sk-fading-circle .sk-circle5:before{animation-delay:-.8s}.sk-fading-circle .sk-circle6:before{animation-delay:-.7s}.sk-fading-circle .sk-circle7:before{animation-delay:-.6s}.sk-fading-circle .sk-circle8:before{animation-delay:-.5s}.sk-fading-circle .sk-circle9:before{animation-delay:-.4s}.sk-fading-circle .sk-circle10:before{animation-delay:-.3s}.sk-fading-circle .sk-circle11:before{animation-delay:-.2s}.sk-fading-circle .sk-circle12:before{animation-delay:-.1s}@keyframes sk-circleFadeDelay{0%,39%,to{opacity:0}40%{opacity:1}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    searchInput: [{\n      type: ViewChild,\n      args: ['searchInput']\n    }],\n    filteredListElement: [{\n      type: ViewChild,\n      args: ['filteredListElement']\n    }],\n    historyListElement: [{\n      type: ViewChild,\n      args: ['historyListElement']\n    }],\n    data: [{\n      type: Input\n    }],\n    searchKeyword: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    heading: [{\n      type: Input\n    }],\n    initialValue: [{\n      type: Input\n    }],\n    historyIdentifier: [{\n      type: Input\n    }],\n    historyHeading: [{\n      type: Input\n    }],\n    historyListMaxNumber: [{\n      type: Input\n    }],\n    notFoundText: [{\n      type: Input\n    }],\n    isLoading: [{\n      type: Input\n    }],\n    debounceTime: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    minQueryLength: [{\n      type: Input\n    }],\n    focusFirst: [{\n      type: Input\n    }],\n    customFilter: [{\n      type: Input\n    }],\n    selectedValueRender: [{\n      type: Input\n    }],\n    selected: [{\n      type: Output\n    }],\n    inputChanged: [{\n      type: Output\n    }],\n    inputFocused: [{\n      type: Output\n    }],\n    inputCleared: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n    scrolledToEnd: [{\n      type: Output\n    }],\n    itemTemplate: [{\n      type: Input\n    }],\n    notFoundTemplate: [{\n      type: Input\n    }],\n    customTemplate: [{\n      type: ContentChild,\n      args: [TemplateRef]\n    }]\n  });\n})();\n\nclass AutocompleteLibModule {}\n\nAutocompleteLibModule.ɵfac = function AutocompleteLibModule_Factory(t) {\n  return new (t || AutocompleteLibModule)();\n};\n\nAutocompleteLibModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AutocompleteLibModule\n});\nAutocompleteLibModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, FormsModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutocompleteLibModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule],\n      declarations: [AutocompleteComponent, HighlightPipe],\n      exports: [AutocompleteComponent, HighlightPipe]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of autocomplete-lib\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AutocompleteComponent, AutocompleteLibModule, HighlightPipe };","map":{"version":3,"mappings":"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","names":["HighlightPipe","transform","text","search","searchKeyword","pattern","replace","split","filter","t","length","join","regex","RegExp","name","match","textCopied","Pipe","args","isArrowUp","keyCode","isArrowDown","isArrowUpDown","isEnter","isBackspace","isDelete","isESC","isTab","AutocompleteComponent","constructor","renderer","isHistoryListVisible","selectedIdx","toHighlight","notFound","isFocused","isOpen","isScrollToEnd","overlay","manualOpen","manualClose","data","placeholder","heading","historyHeading","minQueryLength","focusFirst","EventEmitter","propagateChange","onTouched","elementRef","writeValue","value","query","selectedValueRender","undefined","defaultWriteValue","isTypeString","registerOnChange","fn","registerOnTouched","onChange","event","target","setDisabledState","isDisabled","disabled","ngOnInit","ngAfterViewInit","initEventStream","handleScroll","setInitialValue","initialValue","select","ngOnChanges","changes","Array","isArray","currentValue","handleItemsChange","firstChange","handleOpen","filteredList","filterList","initSearchHistory","customFilter","defaultFilterFunction","item","toLowerCase","indexOf","Object","selected","emit","history","window","localStorage","getItem","historyIdentifier","existingHistory","JSON","parse","some","existingItem","unshift","setItem","stringify","historyListMaxNumber","splice","copiedExistingHistory","slice","selectedIndex","map","el","saveHistory","handleClose","handleClick","e","clickedComponent","inside","nativeElement","parentNode","handleOverlay","listen","filteredListElement","scrollToEnd","setPanelState","stopPropagation","open","close","focus","handleFocus","clear","remove","inputCleared","historyList","isLoading","opened","closed","searchInput","inputFocused","scrollTop","scrollHeight","elementHeight","clientHeight","atBottom","Math","abs","scrolledToEnd","inputKeyUp$","fromEvent","pipe","inputKeyDown$","listenEventStream","debounceTime","subscribe","onKeyUp","preventDefault","onFocusItem","onHandleEnter","onEsc","onTab","onDelete","inputChanged","notFoundText","totalNumItem","key","sum","scrollToFocusedItem","index","listElement","historyListElement","items","prototype","call","childNodes","node","nodeType","className","includes","listHeight","offsetHeight","itemHeight","visibleTop","visibleBottom","targetPosition","offsetTop","blur","saveHistoryToLocalStorage","copiedHistoryList","removeHistoryItem","v","i","removeItem","resetHistoryList","i0","TemplateRef","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","i1","i2","i3.HighlightPipe","Component","selector","providers","encapsulation","None","host","template","styles","ViewChild","Input","Output","itemTemplate","notFoundTemplate","customTemplate","ContentChild","AutocompleteLibModule","CommonModule","FormsModule","NgModule","imports","declarations","exports"],"sources":["/Users/apple/Documents/Personal/buzby/electrofast/projects/autocomplete-lib/src/lib/autocomplete.component.html","/Users/apple/Documents/Personal/buzby/electrofast/projects/autocomplete-lib/src/lib/highlight.pipe.ts","/Users/apple/Documents/Personal/buzby/electrofast/projects/autocomplete-lib/src/lib/autocomplete.component.ts","/Users/apple/Documents/Personal/buzby/electrofast/projects/autocomplete-lib/src/lib/autocomplete-lib.module.ts","/Users/apple/Documents/Personal/buzby/electrofast/projects/autocomplete-lib/src/public_api.ts","/Users/apple/Documents/Personal/buzby/electrofast/projects/autocomplete-lib/src/angular-ng-autocomplete.ts"],"sourcesContent":["<div class=\"autocomplete-container\" aria-owns=\"suggestions suggestions-history\" [attr.aria-expanded]=\"isOpen\"\n     [ngClass]=\"{ 'active': isOpen}\">\n  <div class=\"input-container\">\n    <input #searchInput\n           type=\"text\"\n           attr.aria-label=\"{{placeholder}}\"\n           aria-autocomplete=\"list\"\n           role=\"combobox\"\n           placeholder={{placeholder}}\n           [(ngModel)]=query\n           (input)=\"onChange($event)\"\n           (focus)=handleFocus($event)\n           (blur)=onTouched($event)\n           [disabled]=\"disabled\"\n           autocomplete=\"off\">\n    <div class=\"x\" *ngIf=\"query && !isLoading && !disabled\" (click)=\"remove($event)\">\n      <i class=\"material-icons\" aria-label=\"Close\">close</i>\n    </div>\n    <!--Loading mask-->\n    <div class=\"sk-fading-circle\" *ngIf=\"isLoading\">\n      <div class=\"sk-circle1 sk-circle\"></div>\n      <div class=\"sk-circle2 sk-circle\"></div>\n      <div class=\"sk-circle3 sk-circle\"></div>\n      <div class=\"sk-circle4 sk-circle\"></div>\n      <div class=\"sk-circle5 sk-circle\"></div>\n      <div class=\"sk-circle6 sk-circle\"></div>\n      <div class=\"sk-circle7 sk-circle\"></div>\n      <div class=\"sk-circle8 sk-circle\"></div>\n      <div class=\"sk-circle9 sk-circle\"></div>\n      <div class=\"sk-circle10 sk-circle\"></div>\n      <div class=\"sk-circle11 sk-circle\"></div>\n      <div class=\"sk-circle12 sk-circle\"></div>\n    </div>\n  </div>\n\n  <!--FilteredList items-->\n  <div class=\"suggestions-container\" id=\"suggestions\" role=\"listbox\"\n       [ngClass]=\"{ 'is-hidden': isHistoryListVisible, 'is-visible': !isHistoryListVisible}\">\n    <!--FilteredList heading-->\n    <div class=\"heading\" *ngIf=\"filteredList.length > 0 && heading\">\n      <div class=\"text\">{{heading}}</div>\n    </div>\n\n    <ul #filteredListElement>\n      <li *ngFor=\"let item of filteredList; let idx = index\" class=\"item\">\n        <!--string logic-->\n        <div [class.complete-selected]=\"idx === selectedIdx\" *ngIf='isTypeString(item)'\n             (click)=\"select(item)\">\n          <ng-container\n            *ngTemplateOutlet=\"itemTemplate;  context: { $implicit: item | highlight: toHighlight }\">\n          </ng-container>\n        </div>\n        <!--object logic-->\n        <div [class.complete-selected]=\"idx === selectedIdx\" *ngIf='!isTypeString(item)'\n             (click)=\"select(item)\">\n          <ng-container\n            *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item | highlight: toHighlight : searchKeyword }\">\n          </ng-container>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <!--HistoryList items-->\n  <div class=\"suggestions-container\" id=\"suggestions-history\" role=\"listbox\"\n       [ngClass]=\"{ 'is-hidden': !isHistoryListVisible, 'is-visible': isHistoryListVisible}\">\n    <!--HistoryList heading-->\n    <div class=\"heading\" *ngIf=\"historyList.length > 0 && historyHeading\">\n      <div class=\"text\">{{historyHeading}}</div>\n      <div class=\"x\" (click)=\"resetHistoryList($event)\">\n        <i class=\"material-icons\" aria-label=\"Delete\">delete</i>\n      </div>\n    </div>\n\n    <ul #historyListElement>\n      <li *ngFor=\"let item of historyList; let idx = index\" class=\"item\">\n        <!--string logic-->\n        <div [class.complete-selected]=\"idx === selectedIdx\" *ngIf='isTypeString(item)' (click)=\"select(item)\">\n          <ng-container\n            *ngTemplateOutlet=\"itemTemplate;  context: { $implicit: item }\">\n          </ng-container>\n        </div>\n        <!--object logic-->\n        <div [class.complete-selected]=\"idx === selectedIdx\" *ngIf='!isTypeString(item)' (click)=\"select(item)\">\n          <ng-container\n            *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item }\">\n          </ng-container>\n        </div>\n        <div class=\"x\" (click)=\"removeHistoryItem(idx, $event)\">\n          <i class=\"material-icons\" aria-label=\"Close\">close</i>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <!--Not found-->\n  <div class=\"not-found\" *ngIf=\"isLoading ? !isLoading && notFound : notFound\">\n    <ng-container\n      *ngTemplateOutlet=\"notFoundTemplate;  context: { $implicit: notFoundText  }\">\n    </ng-container>\n  </div>\n</div>\n<div class=\"autocomplete-overlay\" *ngIf=\"overlay\" (click)=\"handleOverlay()\"></div>\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n  transform(text: any, search: any, searchKeyword?: any): any {\n    let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    pattern = pattern.split(' ').filter((t: any) => {\n      return t.length > 0;\n    }).join('|');\n    const regex = new RegExp(pattern, 'gi');\n\n    if (!search) {\n      return text;\n    }\n\n    if (searchKeyword) {\n      const name = text[searchKeyword].replace(regex, (match: any) => `<b>${match}</b>`);\n      // copy original object\n      const textCopied = {...text};\n      // set bold value into searchKeyword of copied object\n      textCopied[searchKeyword] = name;\n      return textCopied;\n    } else {\n      return search ? text.replace(regex, (match: any) => `<b>${match}</b>`) : text;\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  Component, ContentChild,\n  ElementRef,\n  EventEmitter, forwardRef,\n  Input, OnChanges,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges, TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {fromEvent, Observable} from 'rxjs';\nimport {debounceTime, filter, map} from 'rxjs/operators';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * Keyboard events\n */\nconst isArrowUp = (keyCode: number) => keyCode === 38;\nconst isArrowDown = (keyCode: number) => keyCode === 40;\nconst isArrowUpDown = (keyCode: number) => isArrowUp(keyCode) || isArrowDown(keyCode);\nconst isEnter = (keyCode: number) => keyCode === 13;\nconst isBackspace = (keyCode: number) => keyCode === 8;\nconst isDelete = (keyCode: number) => keyCode === 46;\nconst isESC = (keyCode: number) => keyCode === 27;\nconst isTab = (keyCode: number) => keyCode === 9;\n\n\n@Component({\n  selector: 'ng-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AutocompleteComponent),\n      multi: true\n    }\n  ],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '(document:click)': 'handleClick($event)',\n    'class': 'ng-autocomplete'\n  },\n})\n\nexport class AutocompleteComponent implements OnInit, OnChanges, AfterViewInit, ControlValueAccessor {\n  @ViewChild('searchInput') searchInput?: ElementRef; // input element\n  @ViewChild('filteredListElement') filteredListElement?: ElementRef; // element of items\n  @ViewChild('historyListElement') historyListElement?: ElementRef; // element of history items\n\n  inputKeyUp$?: Observable<any>;\n  inputKeyDown$?: Observable<any>;\n\n  public query = ''; // search query\n  public filteredList: any[] = []; // list of items\n  public historyList: any[] = []; // list of history items\n  public isHistoryListVisible = true;\n  public elementRef;\n  public selectedIdx = -1;\n  public toHighlight = '';\n  public notFound = false;\n  public isFocused = false;\n  public isOpen = false;\n  public isScrollToEnd = false;\n  public overlay = false;\n  private manualOpen = false;\n  private manualClose = false;\n\n\n  // @Inputs\n  /**\n   * Data of items list.\n   * It can be array of strings or array of objects.\n   */\n  @Input() public data = [];\n  @Input() public searchKeyword: string = ''; // keyword to filter the list\n  @Input() public placeholder = '';\n  @Input() public heading = '';\n  @Input() public initialValue?: any;\n  /**\n   * History identifier of history list\n   * When valid history identifier is given, then component stores selected item to local storage of user's browser.\n   * If it is null then history is hidden.\n   * History list is visible if at least one history item is stored.\n   */\n  @Input() public historyIdentifier?: string;\n  /**\n   * Heading text of history list.\n   * If it is null then history heading is hidden.\n   */\n  @Input() public historyHeading = 'Recently selected';\n  @Input() public historyListMaxNumber = 15; // maximum number of items in the history list.\n  @Input() public notFoundText = 'Not found'; // set custom text when filter returns empty result\n  @Input() public isLoading?: boolean; // loading mask\n  @Input() public debounceTime: number = 500; // delay time while typing\n  @Input() public disabled: boolean = false; // input disable/enable\n  /**\n   * The minimum number of characters the user must type before a search is performed.\n   */\n  @Input() public minQueryLength = 1;\n\n  /**\n   * Focus first item in the list\n   */\n  @Input() public focusFirst = false;\n\n  /**\n   * Custom filter function\n   */\n  @Input() public customFilter?: (items: any[], query: string) => any[];\n\n  /**\n   * Custom result render function\n   * @param value - selected value to be rendered inside input field\n   */\n  @Input() public selectedValueRender?: (value: any) => string;\n\n  // @Output events\n  /** Event that is emitted whenever an item from the list is selected. */\n  @Output() selected = new EventEmitter<any>();\n\n  /** Event that is emitted whenever an input is changed. */\n  @Output() inputChanged = new EventEmitter<any>();\n\n  /** Event that is emitted whenever an input is focused. */\n  @Output() readonly inputFocused: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted whenever an input is cleared. */\n  @Output() readonly inputCleared: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when the autocomplete panel is opened. */\n  @Output() readonly opened: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when the autocomplete panel is closed. */\n  @Output() readonly closed: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when scrolled to the end of items. */\n  @Output() readonly scrolledToEnd: EventEmitter<void> = new EventEmitter<void>();\n\n\n  // Custom templates\n  @Input() itemTemplate !: TemplateRef<any>;\n  @Input() notFoundTemplate !: TemplateRef<any>;\n  @ContentChild(TemplateRef) customTemplate !: TemplateRef<any>;\n\n  /**\n   * Propagates new value when model changes\n   */\n  propagateChange: any = () => {\n  };\n\n  onTouched: any = () => {\n  };\n\n  /**\n   * Writes a new value from the form model into the view,\n   * Updates model\n   */\n  writeValue(value: any = '') {\n    this.query = this.selectedValueRender !== undefined ? this.selectedValueRender(value) : this.defaultWriteValue(value);\n  }\n\n  private defaultWriteValue(value: any) {\n    return value && !this.isTypeString(value) ? value[this.searchKeyword] : value;\n  }\n\n  /**\n   * Registers a handler that is called when something in the view has changed\n   */\n  registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a handler specifically for when a control receives a touch event\n   */\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Event that is called when the value of an input element is changed\n   */\n  onChange(event: any) {\n    this.propagateChange(event.target.value);\n  }\n\n  constructor(elementRef: ElementRef, private renderer: Renderer2) {\n    this.elementRef = elementRef;\n  }\n\n  /**\n   * Event that is called when the control status changes to or from DISABLED\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    this.initEventStream();\n    this.handleScroll();\n  }\n\n  /**\n   * Set initial value\n   * @param value\n   */\n  public setInitialValue(value: any) {\n    if (this.initialValue) {\n      this.select(value);\n    }\n  }\n\n  /**\n   * Update search results\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    this.setInitialValue(this.initialValue);\n    if (\n      changes &&\n      changes['data'] &&\n      Array.isArray(changes['data'].currentValue)\n    ) {\n      this.handleItemsChange();\n      if (!changes['data'].firstChange && this.isFocused) {\n        this.handleOpen();\n      }\n    }\n  }\n\n  /**\n   * Items change\n   */\n  public handleItemsChange() {\n    this.isScrollToEnd = false;\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.filteredList = this.data;\n    this.notFound = !this.filteredList || this.filteredList.length === 0;\n\n    // Filter list when updating data and panel is open\n    if (this.isOpen) {\n      this.filterList();\n    }\n  }\n\n  /**\n   * Filter data\n   */\n  public filterList() {\n    this.selectedIdx = -1;\n    this.initSearchHistory();\n    if (this.query != null && this.data) {\n      this.toHighlight = this.query;\n      this.filteredList = this.customFilter !== undefined ? this.customFilter([...this.data], this.query) : this.defaultFilterFunction();\n      // If [focusFirst]=\"true\" automatically focus the first match\n      if (this.filteredList.length > 0 && this.focusFirst) {\n        this.selectedIdx = 0;\n      }\n    } else {\n      this.notFound = false;\n    }\n  }\n\n  /**\n   * Default filter function, used unless customFilter is provided\n   */\n  public defaultFilterFunction(): any[] {\n    return this.data.filter((item: any) => {\n      if (typeof item === 'string') {\n        // string logic, check equality of strings\n        return item.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n      } else if (typeof item === 'object' && item instanceof Object) {\n        // object logic, check property equality\n        return item[this.searchKeyword] ? item[this.searchKeyword].toLowerCase().indexOf(this.query.toLowerCase()) > -1 : \"\";\n      } else {\n        return false;\n      }\n    });\n  }\n\n\n  /**\n   * Check if item is a string in the list.\n   * @param item\n   */\n  isTypeString(item: any) {\n    return typeof item === 'string';\n  }\n\n  /**\n   * Select item in the list.\n   * @param item\n   */\n  public select(item: any) {\n    this.query = !this.isTypeString(item) ? item[this.searchKeyword] : item;\n    this.isOpen = true;\n    this.overlay = false;\n    this.selected.emit(item);\n    this.propagateChange(item);\n\n    if (this.initialValue) {\n      // check if history already exists in localStorage and then update\n      const history = window.localStorage.getItem(`${this.historyIdentifier}`);\n      if (history) {\n        let existingHistory = JSON.parse(localStorage[`${this.historyIdentifier}`]);\n        if (!(existingHistory instanceof Array)) existingHistory = [];\n\n        // check if selected item exists in existingHistory\n        if (!existingHistory.some((existingItem: any) => !this.isTypeString(existingItem)\n          ? existingItem[this.searchKeyword] == item[this.searchKeyword] : existingItem == item)) {\n          existingHistory.unshift(item);\n          localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(existingHistory));\n\n          // check if items don't exceed max allowed number\n          if (existingHistory.length >= this.historyListMaxNumber) {\n            existingHistory.splice(existingHistory.length - 1, 1);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(existingHistory));\n          }\n        } else {\n          // if selected item exists in existingHistory swap to top in array\n          if (!this.isTypeString(item)) {\n            // object logic\n            const copiedExistingHistory = existingHistory.slice(); // copy original existingHistory array\n            const selectedIndex = copiedExistingHistory.map((el: any) => el[this.searchKeyword]).indexOf(item[this.searchKeyword]);\n            copiedExistingHistory.splice(selectedIndex, 1);\n            copiedExistingHistory.splice(0, 0, item);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(copiedExistingHistory));\n          } else {\n            // string logic\n            const copiedExistingHistory = existingHistory.slice(); // copy original existingHistory array\n            copiedExistingHistory.splice(copiedExistingHistory.indexOf(item), 1);\n            copiedExistingHistory.splice(0, 0, item);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(copiedExistingHistory));\n          }\n        }\n      } else {\n        this.saveHistory(item);\n      }\n    } else {\n      this.saveHistory(item);\n    }\n    this.handleClose();\n  }\n\n  /**\n   * Document click\n   * @param e event\n   */\n  public handleClick(e: any) {\n    let clickedComponent = e.target;\n    let inside = false;\n    do {\n      if (clickedComponent === this.elementRef.nativeElement) {\n        inside = true;\n        if (this.filteredList.length) {\n          this.handleOpen();\n        }\n      }\n      clickedComponent = clickedComponent.parentNode;\n    } while (clickedComponent);\n    if (!inside) {\n      this.handleClose();\n    }\n  }\n\n  /**\n   * Handle body overlay\n   */\n  handleOverlay() {\n    this.overlay = false;\n  }\n\n  /**\n   * Scroll items\n   */\n  public handleScroll() {\n    this.renderer.listen(this.filteredListElement?.nativeElement, 'scroll', () => {\n      this.scrollToEnd();\n    });\n  }\n\n  /**\n   * Define panel state\n   */\n  setPanelState(event: any) {\n    if (event) {\n      event.stopPropagation();\n    }\n    // If controls are untouched\n    if (typeof this.manualOpen === 'undefined'\n      && typeof this.manualClose === 'undefined') {\n      this.isOpen = false;\n      this.handleOpen();\n    }\n\n    // If one of the controls is untouched and other is deactivated\n    if (typeof this.manualOpen === 'undefined'\n      && this.manualClose === false\n      || typeof this.manualClose === 'undefined'\n      && this.manualOpen === false) {\n      this.isOpen = false;\n      this.handleOpen();\n    }\n\n    // if controls are touched but both are deactivated\n    if (this.manualOpen === false && this.manualClose === false) {\n      this.isOpen = false;\n      this.handleOpen();\n    }\n\n    // if open control is touched and activated\n    if (this.manualOpen) {\n      this.isOpen = false;\n      this.handleOpen();\n      this.manualOpen = false;\n    }\n\n    // if close control is touched and activated\n    if (this.manualClose) {\n      this.isOpen = true;\n      this.handleClose();\n      this.manualClose = false;\n    }\n  }\n\n  /**\n   * Manual controls\n   */\n  open() {\n    this.manualOpen = true;\n    this.isOpen = false;\n    this.handleOpen();\n  }\n\n  close() {\n    this.manualClose = true;\n    this.isOpen = true;\n    this.handleClose();\n  }\n\n  focus() {\n    this.handleFocus(event);\n  }\n\n  clear() {\n    this.remove(event);\n  }\n\n  /**\n   * Remove search query\n   */\n  public remove(e: any) {\n    e.stopPropagation();\n    this.query = '';\n    this.inputCleared.emit();\n    this.propagateChange(this.query);\n    this.setPanelState(e);\n\n    if (this.data && !this.data.length) {\n      this.notFound = false;\n    }\n  }\n\n  /**\n   * Initialize historyList search\n   */\n  initSearchHistory() {\n    this.isHistoryListVisible = false;\n    if (this.historyIdentifier && !this.query) {\n      const history = window.localStorage.getItem(`${this.historyIdentifier}`);\n      if (history) {\n        this.isHistoryListVisible = true;\n        this.filteredList = [];\n        this.historyList = history ? JSON.parse(history) : [];\n      } else {\n        this.isHistoryListVisible = false;\n      }\n    } else {\n      this.isHistoryListVisible = false;\n    }\n  }\n\n  handleOpen() {\n    if (this.isOpen || this.isOpen && !this.isLoading) {\n      return;\n    }\n    // If data exists\n    if (this.data && this.data.length) {\n      this.isOpen = true;\n      this.overlay = true;\n      this.filterList();\n      this.opened.emit();\n    }\n  }\n\n  handleClose() {\n    if (!this.isOpen) {\n      this.isFocused = false;\n      return;\n    }\n    this.isOpen = false;\n    this.overlay = false;\n    this.filteredList = [];\n    this.selectedIdx = -1;\n    this.notFound = false;\n    this.isHistoryListVisible = false;\n    this.isFocused = false;\n    this.closed.emit();\n  }\n\n  handleFocus(e: any) {\n    this.searchInput?.nativeElement.focus();\n    if (this.isFocused) {\n      return;\n    }\n    this.inputFocused.emit(e);\n    // if data exists then open\n    if (this.data && this.data.length) {\n      this.setPanelState(e);\n    }\n    this.isFocused = true;\n  }\n\n  scrollToEnd(): void {\n    if (this.isScrollToEnd) {\n      return;\n    }\n\n    const scrollTop = this.filteredListElement?.nativeElement\n      .scrollTop;\n    const scrollHeight = this.filteredListElement?.nativeElement\n      .scrollHeight;\n    const elementHeight = this.filteredListElement?.nativeElement\n      .clientHeight;\n    const atBottom = elementHeight !=0 && Math.abs(scrollHeight - elementHeight - scrollTop) < 1;\n\n    if (atBottom) {\n      this.scrolledToEnd.emit();\n      this.isScrollToEnd = true;\n    }\n  }\n\n  /**\n   * Initialize keyboard events\n   */\n  initEventStream() {\n    this.inputKeyUp$ = fromEvent(\n      this.searchInput?.nativeElement, 'keyup'\n    ).pipe(map(\n      (e: any) => e\n    ));\n\n    this.inputKeyDown$ = fromEvent(\n      this.searchInput?.nativeElement,\n      'keydown'\n    ).pipe(map(\n      (e: any) => e\n    ));\n\n    this.listenEventStream();\n  }\n\n  /**\n   * Listen keyboard events\n   */\n  listenEventStream() {\n    // key up event\n    this.inputKeyUp$?.pipe(\n        filter((e: any) =>\n          !isArrowUpDown(e.keyCode) &&\n          !isEnter(e.keyCode) &&\n          !isESC(e.keyCode) &&\n          !isTab(e.keyCode)),\n        debounceTime(this.debounceTime)\n      ).subscribe((e: any) => {\n      this.onKeyUp(e);\n    });\n\n    // cursor up & down\n    this.inputKeyDown$?.pipe(filter(\n      e => isArrowUpDown(e.keyCode)\n    )).subscribe(e => {\n      e.preventDefault();\n      this.onFocusItem(e);\n    });\n\n    // enter keyup\n    this.inputKeyUp$?.pipe(filter(e => isEnter(e.keyCode))).subscribe(e => {\n      //this.onHandleEnter();\n    });\n\n    // enter keydown\n    this.inputKeyDown$?.pipe(filter(e => isEnter(e.keyCode))).subscribe(e => {\n      this.onHandleEnter();\n    });\n\n    // ESC\n    this.inputKeyUp$?.pipe(\n      filter(e => isESC(e.keyCode),\n        debounceTime(100))\n    ).subscribe(e => {\n      this.onEsc();\n    });\n\n    // TAB\n    this.inputKeyDown$?.pipe(\n      filter(e => isTab(e.keyCode))\n    ).subscribe(e => {\n      this.onTab();\n    });\n\n    // delete\n    this.inputKeyDown$?.pipe(\n      filter(e => isBackspace(e.keyCode) || isDelete(e.keyCode))\n    ).subscribe(e => {\n      this.onDelete();\n    });\n  }\n\n  /**\n   * on keyup == when input changed\n   * @param e event\n   */\n  onKeyUp(e: any) {\n    this.notFound = false; // search results are unknown while typing\n    // if input is empty\n    if (!this.query) {\n      this.notFound = false;\n      this.inputChanged.emit(e.target.value);\n      this.inputCleared.emit();\n      this.setPanelState(e);\n    }\n    // note that '' can be a valid query\n    if (!this.query && this.query !== '') {\n      return;\n    }\n    // if query >= to minQueryLength\n    if (this.query.length >= this.minQueryLength) {\n      this.inputChanged.emit(e.target.value);\n      this.filterList();\n\n      // If no results found\n      if (!this.filteredList.length && !this.isLoading) {\n        this.notFoundText ? this.notFound = true : this.notFound = false;\n      }\n\n      if (this.data && !this.data.length) {\n        this.isOpen = true;\n      }\n    }\n  }\n\n\n  /**\n   * Keyboard arrow top and arrow bottom\n   * @param e event\n   */\n  onFocusItem(e: any) {\n    // move arrow up and down on filteredList or historyList\n    if (!this.historyList.length || !this.isHistoryListVisible) {\n      // filteredList\n      const totalNumItem = this.filteredList.length;\n      if (e.key === 'ArrowDown') {\n        let sum = this.selectedIdx;\n        sum = (this.selectedIdx === null) ? 0 : sum + 1;\n        this.selectedIdx = (totalNumItem + sum) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      } else if (e.key === 'ArrowUp') {\n        if (this.selectedIdx == -1) {\n          this.selectedIdx = 0;\n        }\n        this.selectedIdx = (totalNumItem + this.selectedIdx - 1) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      }\n    } else {\n      // historyList\n      const totalNumItem = this.historyList.length;\n      if (e.key === 'ArrowDown') {\n        let sum = this.selectedIdx;\n        sum = (this.selectedIdx === null) ? 0 : sum + 1;\n        this.selectedIdx = (totalNumItem + sum) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      } else if (e.key === 'ArrowUp') {\n        if (this.selectedIdx == -1) {\n          this.selectedIdx = 0;\n        }\n        this.selectedIdx = (totalNumItem + this.selectedIdx - 1) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      }\n    }\n  }\n\n  /**\n   * Scroll to focused item\n   * * @param index\n   */\n  scrollToFocusedItem(index: any) {\n    let listElement: any = null;\n    // Define list element\n    if (!this.historyList.length || !this.isHistoryListVisible) {\n      // filteredList element\n      listElement = this.filteredListElement?.nativeElement;\n    } else {\n      // historyList element\n      listElement = this.historyListElement?.nativeElement;\n    }\n\n    const items = Array.prototype.slice.call(listElement?.childNodes).filter((node: any) => {\n      if (node.nodeType === 1) {\n        // if node is element\n        return node.className.includes('item');\n      } else {\n        return false;\n      }\n    });\n\n    if (!items.length) {\n      return;\n    }\n\n    const listHeight = listElement.offsetHeight;\n    const itemHeight = items[index].offsetHeight;\n    const visibleTop = listElement.scrollTop;\n    const visibleBottom = listElement.scrollTop + listHeight - itemHeight;\n    const targetPosition = items[index].offsetTop;\n\n    if (targetPosition < visibleTop) {\n      listElement.scrollTop = targetPosition;\n    }\n\n    if (targetPosition > visibleBottom) {\n      listElement.scrollTop = targetPosition - listHeight + itemHeight;\n    }\n  }\n\n  /**\n   * Select item on enter click\n   */\n  onHandleEnter() {\n    // click enter to choose item from filteredList or historyList\n    if (this.selectedIdx > -1) {\n      if (!this.historyList.length || !this.isHistoryListVisible) {\n        // filteredList\n        this.query = !this.isTypeString(this.filteredList[this.selectedIdx])\n          ? this.filteredList[this.selectedIdx][this.searchKeyword]\n          : this.filteredList[this.selectedIdx];\n\n        this.saveHistory(this.filteredList[this.selectedIdx]);\n        this.select(this.filteredList[this.selectedIdx]);\n      } else {\n        // historyList\n        this.query = !this.isTypeString(this.historyList[this.selectedIdx])\n          ? this.historyList[this.selectedIdx][this.searchKeyword]\n          : this.historyList[this.selectedIdx];\n        this.saveHistory(this.historyList[this.selectedIdx]);\n        this.select(this.historyList[this.selectedIdx]);\n      }\n    }\n    this.isHistoryListVisible = false;\n    this.handleClose();\n  }\n\n  /**\n   * Esc click\n   */\n  onEsc() {\n    this.searchInput?.nativeElement.blur();\n    this.handleClose();\n  }\n\n  /**\n   * Tab click\n   */\n  onTab() {\n    this.searchInput?.nativeElement.blur();\n    this.handleClose();\n  }\n\n  /**\n   * Delete click\n   */\n  onDelete() {\n    this.isOpen = true;\n  }\n\n\n  /**\n   * Select item to save in localStorage\n   * @param selected\n   */\n  saveHistory(selected: any) {\n    if (this.historyIdentifier) {\n      // check if selected item exists in historyList\n      if (!this.historyList.some((item) => !this.isTypeString(item)\n        ? item[this.searchKeyword] == selected[this.searchKeyword] : item == selected)) {\n        this.saveHistoryToLocalStorage([selected, ...this.historyList]);\n\n        // check if items don't exceed max allowed number\n        if (this.historyList.length >= this.historyListMaxNumber) {\n          this.historyList.splice(this.historyList.length - 1, 1);\n          this.saveHistoryToLocalStorage([selected, ...this.historyList]);\n        }\n      } else {\n        // if selected item exists in historyList swap to top in array\n        if (!this.isTypeString(selected)) {\n          // object logic\n          const copiedHistoryList = this.historyList.slice(); // copy original historyList array\n          const selectedIndex = copiedHistoryList.map((item) => item[this.searchKeyword]).indexOf(selected[this.searchKeyword]);\n          copiedHistoryList.splice(selectedIndex, 1);\n          copiedHistoryList.splice(0, 0, selected);\n          this.saveHistoryToLocalStorage([...copiedHistoryList]);\n        } else {\n          // string logic\n          const copiedHistoryList = this.historyList.slice(); // copy original historyList array\n          copiedHistoryList.splice(this.historyList.indexOf(selected), 1);\n          copiedHistoryList.splice(0, 0, selected);\n          this.saveHistoryToLocalStorage([...copiedHistoryList]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Save item in localStorage\n   * @param selected\n   */\n  saveHistoryToLocalStorage(selected: any) {\n    window.localStorage.setItem(\n      `${this.historyIdentifier}`,\n      JSON.stringify(selected)\n    );\n  }\n\n  /**\n   * Remove item from localStorage\n   * @param index\n   * @param e event\n   */\n  removeHistoryItem(index: any, e: any) {\n    e.stopPropagation();\n    this.historyList = this.historyList.filter((v, i) => i !== index);\n    this.saveHistoryToLocalStorage(this.historyList);\n    if (this.historyList.length == 0) {\n      window.localStorage.removeItem(`${this.historyIdentifier}`);\n      this.filterList();\n    }\n  }\n\n  /**\n   * Reset localStorage\n   * @param e event\n   */\n  resetHistoryList(e: any) {\n    e.stopPropagation();\n    this.historyList = [];\n    window.localStorage.removeItem(`${this.historyIdentifier}`);\n    this.filterList();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {AutocompleteComponent} from './autocomplete.component';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {HighlightPipe} from './highlight.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [AutocompleteComponent, HighlightPipe],\n  exports: [ AutocompleteComponent, HighlightPipe]\n})\nexport class AutocompleteLibModule {\n}\n","/*\n * Public API Surface of autocomplete-lib\n */\n\nexport * from './lib/autocomplete-lib.module';\nexport * from './lib/autocomplete.component';\nexport * from './lib/highlight.pipe';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}